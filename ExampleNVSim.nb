(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    234747,       5792]
NotebookOptionsPosition[    224667,       5461]
NotebookOutlinePosition[    225183,       5483]
CellTagsIndexPosition[    225096,       5478]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<NVSim`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.566730216514826*^9, 3.566730221812582*^9}}],

Cell[CellGroupData[{

Cell["Overview", "Subsection",
 CellChangeTimes->{{3.566919992441021*^9, 3.566919996386363*^9}}],

Cell["\<\
Before anything else, let me note that \[OpenCurlyDoubleQuote]NVSim\
\[CloseCurlyDoubleQuote] is a misnomer: this package is in no way specific to \
NVs. It should really be called \[OpenCurlyDoubleQuote]QuantumSim\
\[CloseCurlyDoubleQuote] or something and moved to QuantumUtils. But renaming \
and moving things is sort of a pain, and so as it is it stays for the time \
being.\
\>", "Text",
 CellChangeTimes->{{3.568041911207803*^9, 3.56804204478724*^9}, {
  3.568042084470715*^9, 3.5680420873544273`*^9}}],

Cell["\<\
The main function of NVSim is EvalPulse[H,p], where H is the Hamiltonian, and \
p is the pulse. By pulse, we mean one of four things:\
\>", "Text",
 CellChangeTimes->{{3.566920002346897*^9, 3.566920156124608*^9}, {
  3.5669202258397818`*^9, 3.5669206198292017`*^9}, {3.5669210757060757`*^9, 
  3.566921078777279*^9}, {3.568035987707437*^9, 3.568035988016941*^9}}],

Cell[TextData[StyleBox["(1)  A drift pulse: the evolution under the \
Hamiltonian for some time. In this case, p is just equal to a number, or a \
Symbol such as \[OpenCurlyDoubleQuote]t\[CloseCurlyDoubleQuote].\n\n(2)   A \
shaped pulse: A list of control Hamiltonians, time spacings, and amplitudes \
is provided, and everything is simulated. In this case, p is of the form \
{pulse,{Hctl1,Hctl2,...}} where pulse is either a text file (eg. CVS) \
containing the pulse, or the pulse itself. A pulse is of the form \
{dt1,a11,a12,a13,...},{dt2,a21,a22,a23,...},{dt2,a21,a22,a23,...},...}.\n\n\
(3)  A unitary pulse: the Hamiltonian is ignored and some other unitary is \
applied. This kind of pulse only really makes within pulse sequences. In this \
case, p is of the form {U,t} where U is the unitary matrix and t is how much \
time the pulse should take.\n\n(4) A superoperator pulse: the Hamiltonian is \
ignored, and the supplied superoperator is applied. Similar to a unitary \
pulse, a superoperator pulse only really makes sense in the context of a \
pulse sequence. Also note that you cannot expect any unitaries to be returned \
from a simulation involving a superoperator pulse: it is required that an \
initial state be given with this kind of pulse.",
 Background->RGBColor[0.94, 0.88, 0.94]]], "Text",
 CellChangeTimes->{{3.566921081725074*^9, 3.566921133690091*^9}, {
  3.5669212944690437`*^9, 3.56692130378889*^9}, {3.568026866703643*^9, 
  3.5680268799748917`*^9}, {3.5680359470861187`*^9, 3.56803594926725*^9}, {
  3.568035993180566*^9, 3.568036137432788*^9}}],

Cell["\<\
The Hamiltonian H can be either time dependent, in which case it is just a \
matrix, or time dependent, in which case it is a function taking one real \
argument, and returning a matrix. For example:\
\>", "Text",
 CellChangeTimes->{{3.56692065454774*^9, 3.566920711572877*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TimeIndepHam", "=", 
   RowBox[{"3", "Z"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TimeDepHam", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"Cos", "[", "t", "]"}], "Z"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.566920713759202*^9, 3.566920759723268*^9}, {
  3.5680356892780313`*^9, 3.568035694421596*^9}}],

Cell["\<\
In addition to the inputs H and p, there are also several options. Instead of \
explicitly listing them all and what they do, for this would be tedious, I \
will trust that you can garner their meanings from the examples which follow. \
I will mention, however, that you can view all the options by typing:\
\>", "Text",
 CellChangeTimes->{{3.566920790964148*^9, 3.5669209228347883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "SimulationOptions", "]"}]], "Input",
 CellChangeTimes->{{3.566920924271861*^9, 3.566920929281033*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"StepSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PollingInterval", "\[Rule]", "Off"}], ",", 
   RowBox[{"InitialState", "\[Rule]", "None"}], ",", 
   RowBox[{"Observables", "\[Rule]", "None"}], ",", 
   RowBox[{"Functions", "\[Rule]", "None"}], ",", 
   RowBox[{"SimulationOutput", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"SequenceMode", "\[Rule]", "False"}], ",", 
   RowBox[{"NumericEvaluation", "\[Rule]", "True"}]}], "}"}]], "Output",
 CellChangeTimes->{3.566920929655292*^9, 3.5680270988756447`*^9}]
}, Open  ]],

Cell["\<\
And moreover, that using the ? symbol will yeild quick descriptions:\
\>", "Text",
 CellChangeTimes->{{3.566920934447831*^9, 3.566920955043056*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "StepSize"}]], "Input",
 CellChangeTimes->{{3.566920961010808*^9, 3.566920962544364*^9}}],

Cell[BoxData[
 StyleBox["\<\"StepSize is a simulation option that chooses the time \
discretization when the internal Hamiltonian is time dependent. Can be set to \
Automatic.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.568027099068309*^9},
 CellTags->"Info3568009098-7400086"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplest Example", "Subsection",
 CellChangeTimes->{{3.566919885044139*^9, 3.566919893395866*^9}, {
  3.566921531054543*^9, 3.566921535083291*^9}}],

Cell["\<\
We evolve under X/2 for a time \[Pi]:\
\>", "Text",
 CellChangeTimes->{{3.56692133269645*^9, 3.566921370497665*^9}, {
  3.566921937516582*^9, 3.5669219386519327`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EvalPulse", "[", 
   RowBox[{
    RowBox[{"X", "/", "2"}], ",", "\[Pi]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.56691996317229*^9, 3.566919981241263*^9}, {
  3.566921379452258*^9, 3.566921391790617*^9}, {3.566921935013884*^9, 
  3.566921935123671*^9}, {3.568027160270791*^9, 3.568027161684395*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Unitaries", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"1.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ",", "0"}], "}"}]}], 
        "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5669213924142723`*^9, 3.566921940499393*^9, 
  3.568027099185484*^9, 3.568027162072695*^9}]
}, Open  ]],

Cell[TextData[{
 "The TimeVector shows the times at which an output is returned. Since we \
have not entered an initial state, the output defaults to displaying the \
unitaries at these times. In this simple example we see that at time 0, we \
have the identity unitary, and at time \[Pi], we have ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{
     RowBox[{"-", "I"}], " ", "\[Pi]", " ", 
     RowBox[{"X", "/", "2"}]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.566921415828773*^9, 3.566921488463101*^9}, {
  3.5669216145747833`*^9, 3.566921636014596*^9}, {3.566921926526822*^9, 
  3.56692192659864*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Next Simplest Examples: Using Options\
\>", "Subsection",
 CellChangeTimes->{{3.566921586686653*^9, 3.566921594501614*^9}, {
  3.566921709413492*^9, 3.5669217179480247`*^9}, {3.566921773693434*^9, 
  3.566921774337929*^9}, {3.5669282565656147`*^9, 3.566928282609701*^9}}],

Cell[CellGroupData[{

Cell["InitialState", "Subsubsection",
 CellChangeTimes->{{3.566921659781927*^9, 3.5669216620298233`*^9}}],

Cell["\<\
If we enter an initial state, the output automatically chooses to track this \
state over time:\
\>", "Text",
 CellChangeTimes->{{3.56692174402813*^9, 3.566921799906592*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EvalPulse", "[", 
   RowBox[{
    RowBox[{"X", "/", "2"}], ",", "\[Pi]", ",", 
    RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}]}], "]"}], "//", 
  "Chop"}]}], "Input",
 CellChangeTimes->{{3.5669218777956867`*^9, 3.5669219211556787`*^9}, {
  3.568026226889077*^9, 3.56802623214989*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"States", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1.`"}], "}"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.566921908318408*^9, 3.5669219474468727`*^9, {3.568026217692976*^9, 
   3.568026232567442*^9}, 3.568027099229993*^9}]
}, Open  ]],

Cell["\<\
Now we know the state of the system at all times in the TimeVector.\
\>", "Text",
 CellChangeTimes->{{3.566921957707284*^9, 3.5669219792761507`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["PollingInterval", "Subsubsection",
 CellChangeTimes->{{3.566921669571498*^9, 3.566921678170817*^9}}],

Cell["\<\
We may want to know things about the system at intermedate times. This is \
done through PollingInterval.\
\>", "Text",
 CellChangeTimes->{{3.5669219910364532`*^9, 3.566922014804158*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EvalPulse", "[", 
  RowBox[{
   RowBox[{"X", "/", "2"}], ",", "\[Pi]", ",", 
   RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}], ",", 
   RowBox[{"PollingInterval", "\[Rule]", "0.3"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5669220398673*^9, 3.566922059897025*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"States", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.9797464868072486`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.1408662784207148`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.1408662784207148`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.0202535131927513`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.9206267664155905`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.2703204087277987`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.2703204087277987`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.07937323358440937`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.8274303669726425`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.377874787177129`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.377874787177129`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.1725696330273574`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.707707506500943`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.45481599767725905`", " ", "\[ImaginaryI]"}]}]}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.45481599767725905`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.2922924934990566`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.5711574191366424`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.4949107209404661`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.4949107209404661`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.4288425808633572`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.42884258086335736`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.4949107209404662`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.4949107209404662`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.5711574191366422`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.2922924934990566`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.4548159976772589`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.4548159976772589`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.7077075065009427`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.1725696330273574`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.3778747871771289`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.3778747871771289`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.8274303669726418`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.0793732335844094`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.27032040872779867`", " ", "\[ImaginaryI]"}]}]}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.27032040872779867`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.9206267664155899`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.020253513192751312`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.14086627842071484`", " ", "\[ImaginaryI]"}]}]}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.14086627842071484`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.979746486807248`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"6.933347799794049`*^-33", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"8.32667268468867`*^-17", " ", "\[ImaginaryI]"}]}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"8.32667268468867`*^-17", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.9999999999999991`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["\[Pi]", "11"], ",", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"6", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"8", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"9", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"10", " ", "\[Pi]"}], "11"], ",", "\[Pi]"}], "}"}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.566922049078438*^9, 3.566922060346513*^9}, 
   3.568027099274746*^9}]
}, Open  ]],

Cell["\<\
Now we know the state of the system every 0.3 units of time. Notice that \
PollingInterval does not have to evenly divide the total evolution time. This \
is in general true, PollingInterval need have no relation to any time scale \
in your problem.\
\>", "Text",
 CellChangeTimes->{{3.566922064691956*^9, 3.566922136711684*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Observables", "Subsubsection",
 CellChangeTimes->{{3.566921688971592*^9, 3.566921696626368*^9}}],

Cell["\<\
You may want to track the expectation values of some observables. This can be \
done through Observables:\
\>", "Text",
 CellChangeTimes->{{3.566922162323238*^9, 3.566922200723175*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EvalPulse", "[", 
  RowBox[{
   RowBox[{"X", "/", "2"}], ",", "\[Pi]", ",", 
   RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}], ",", 
   RowBox[{"PollingInterval", "\[Rule]", "0.3"}], ",", 
   RowBox[{"Observables", "\[Rule]", 
    RowBox[{"{", "Z", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.566922251603785*^9, 3.566922269591153*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Observables", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "0.9594929736144974`", "}"}], ",", 
       RowBox[{"{", "0.8412535328311811`", "}"}], ",", 
       RowBox[{"{", "0.6548607339452851`", "}"}], ",", 
       RowBox[{"{", "0.41541501300188644`", "}"}], ",", 
       RowBox[{"{", "0.14231483827328523`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.14231483827328484`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.4154150130018861`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.6548607339452844`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.8412535328311805`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.9594929736144967`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.9999999999999991`"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["\[Pi]", "11"], ",", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"6", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"8", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"9", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"10", " ", "\[Pi]"}], "11"], ",", "\[Pi]"}], "}"}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.566922273044454*^9, 3.568027099475256*^9}]
}, Open  ]],

Cell["\<\
Note that Observables must be a list even if we are only interested in only \
one observable. We can also track multiple observables:\
\>", "Text",
 CellChangeTimes->{{3.56692228821171*^9, 3.566922296146866*^9}, {
  3.566922366063259*^9, 3.5669224009973516`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EvalPulse", "[", 
  RowBox[{
   RowBox[{"X", "/", "2"}], ",", "\[Pi]", ",", 
   RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}], ",", 
   RowBox[{"PollingInterval", "\[Rule]", "0.3"}], ",", 
   RowBox[{"Observables", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.566922304170638*^9, 3.566922307855339*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Observables", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.2817325568414296`"}], ",", "0.9594929736144974`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.5406408174555974`"}], ",", "0.8412535328311811`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.755749574354258`"}], ",", "0.6548607339452851`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.9096319953545181`"}], ",", "0.41541501300188644`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.9898214418809322`"}], ",", "0.14231483827328523`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.9898214418809324`"}], ",", 
         RowBox[{"-", "0.14231483827328484`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.9096319953545178`"}], ",", 
         RowBox[{"-", "0.4154150130018861`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.7557495743542578`"}], ",", 
         RowBox[{"-", "0.6548607339452844`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.5406408174555973`"}], ",", 
         RowBox[{"-", "0.8412535328311805`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.28173255684142967`"}], ",", 
         RowBox[{"-", "0.9594929736144967`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "1.665334536937734`*^-16"}], ",", 
         RowBox[{"-", "0.9999999999999991`"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["\[Pi]", "11"], ",", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"6", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"8", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"9", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"10", " ", "\[Pi]"}], "11"], ",", "\[Pi]"}], "}"}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.5669223083772497`*^9, 3.5680270995752697`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Subsubsection",
 CellChangeTimes->{{3.5669217024698677`*^9, 3.566921703291937*^9}}],

Cell["\<\
You may want to track the evolution of some arbitrary function(s), like the \
purity of a subsystem. This can be done through Functions, which is similar \
in flavour to Observables.\
\>", "Text",
 CellChangeTimes->{{3.566922330682403*^9, 3.5669223614337797`*^9}, {
  3.566922411689283*^9, 3.566922412761065*^9}, {3.5669246768692017`*^9, 
  3.566924684584909*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"Projector", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{"Purity", "[", 
    RowBox[{"PartialTr", "[", 
     RowBox[{"\[Rho]", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EvalPulse", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[DoubleStruckOne]", "\[CircleTimes]", "Z"}], "+", 
     RowBox[{"Z", "\[CircleTimes]", "\[DoubleStruckOne]"}], "+", 
     RowBox[{"X", "\[CircleTimes]", "X"}], "+", 
     RowBox[{"Y", "\[CircleTimes]", "Y"}], "+", 
     RowBox[{"Z", "\[CircleTimes]", "Z"}]}], ",", 
    RowBox[{"10", "\[Pi]"}], ",", 
    RowBox[{"PollingInterval", "\[Rule]", "1"}], ",", 
    RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}], ",", 
    RowBox[{"Functions", "\[Rule]", 
     RowBox[{"{", "f", "}"}]}]}], "]"}], "//", "Chop"}]}], "Input",
 CellChangeTimes->{{3.566922433731696*^9, 3.566922474674369*^9}, {
   3.5669230824810257`*^9, 3.5669231194784393`*^9}, {3.566923171277523*^9, 
   3.566923207744274*^9}, {3.566923240599256*^9, 3.566923255789197*^9}, {
   3.5669233069720592`*^9, 3.566923307072653*^9}, 3.566923941498765*^9, {
   3.5669240520002403`*^9, 3.5669240611203423`*^9}, {3.5669244781999283`*^9, 
   3.566924480984993*^9}, {3.5669245218174467`*^9, 3.5669246057453613`*^9}, 
   3.566924662312846*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Functions", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "0.75`", "}"}], ",", 
       RowBox[{"{", "0.4999999999999995`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999988`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999987`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999978`", "}"}], ",", 
       RowBox[{"{", "0.4999999999999984`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999974`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999956`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999964`", "}"}], ",", 
       RowBox[{"{", "0.49999999999999734`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999952`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999938`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999938`", "}"}], ",", 
       RowBox[{"{", "0.49999999999999584`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999942`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999902`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999918`", "}"}], ",", 
       RowBox[{"{", "0.4999999999999949`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999913`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999876`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999907`", "}"}], ",", 
       RowBox[{"{", "0.4999999999999932`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999898`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999849`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999882`", "}"}], ",", 
       RowBox[{"{", "0.49999999999999234`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999878`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999831`", "}"}], ",", 
       RowBox[{"{", "0.749999999999986`", "}"}], ",", 
       RowBox[{"{", "0.4999999999999907`", "}"}], ",", 
       RowBox[{"{", "0.749999999999987`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999805`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"15", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "4"], ",", 
       FractionBox[
        RowBox[{"25", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"15", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"35", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "2"], ",", 
       FractionBox[
        RowBox[{"45", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"25", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"55", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"15", " ", "\[Pi]"}], "4"], ",", 
       FractionBox[
        RowBox[{"65", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"35", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"75", " ", "\[Pi]"}], "16"], ",", 
       RowBox[{"5", " ", "\[Pi]"}], ",", 
       FractionBox[
        RowBox[{"85", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"45", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"95", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"25", " ", "\[Pi]"}], "4"], ",", 
       FractionBox[
        RowBox[{"105", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"55", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"115", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"15", " ", "\[Pi]"}], "2"], ",", 
       FractionBox[
        RowBox[{"125", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"65", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"135", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"35", " ", "\[Pi]"}], "4"], ",", 
       FractionBox[
        RowBox[{"145", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"75", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"155", " ", "\[Pi]"}], "16"], ",", 
       RowBox[{"10", " ", "\[Pi]"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.566923115320178*^9, 3.566923121082988*^9}, 
   3.566923171803102*^9, 3.5669232047257566`*^9, {3.566923234803878*^9, 
   3.566923256328412*^9}, 3.566923307676745*^9, 3.566923942932867*^9, 
   3.566924061429718*^9, 3.5669243623372793`*^9, 3.566924416984564*^9, 
   3.5669244820222883`*^9, {3.5669245246989202`*^9, 3.566924606468912*^9}, {
   3.5669246601377277`*^9, 3.566924662997821*^9}, 3.568027099673668*^9}]
}, Open  ]],

Cell["\<\
Next we ask for both some observables and functions:\
\>", "Text",
 CellChangeTimes->{{3.56692306620989*^9, 3.566923069922389*^9}, {
  3.566923131730949*^9, 3.566923136450234*^9}, {3.566923277115909*^9, 
  3.5669232851711073`*^9}, {3.566924120556101*^9, 3.566924151935131*^9}, {
  3.566924452559795*^9, 3.566924465273189*^9}, {3.566924697740095*^9, 
  3.5669247070917473`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"Projector", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{"Purity", "[", 
    RowBox[{"PartialTr", "[", 
     RowBox[{"\[Rho]", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EvalPulse", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[DoubleStruckOne]", "\[CircleTimes]", "Z"}], "+", 
     RowBox[{"Z", "\[CircleTimes]", "\[DoubleStruckOne]"}], "+", 
     RowBox[{"X", "\[CircleTimes]", "X"}], "+", 
     RowBox[{"Y", "\[CircleTimes]", "Y"}], "+", 
     RowBox[{"Z", "\[CircleTimes]", "Z"}]}], ",", 
    RowBox[{"10", "\[Pi]"}], ",", 
    RowBox[{"PollingInterval", "\[Rule]", "1"}], ",", 
    RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}], ",", 
    RowBox[{"Functions", "\[Rule]", 
     RowBox[{"{", "f", "}"}]}], ",", 
    RowBox[{"Observables", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Z", "\[CircleTimes]", "\[DoubleStruckOne]"}], "}"}]}]}], "]"}],
   "//", "Chop"}]}], "Input",
 CellChangeTimes->{{3.5669247192471523`*^9, 3.5669247329367*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Observables", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.7071067811865476`"}], "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0.707106781186547`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.9999999999999993`"}], "}"}], ",", 
       RowBox[{"{", "0.7071067811865464`", "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.7071067811865464`"}], "}"}], ",", 
       RowBox[{"{", "0.9999999999999978`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.7071067811865458`"}], "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0.7071067811865455`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.9999999999999969`"}], "}"}], ",", 
       RowBox[{"{", "0.7071067811865442`", "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.707106781186545`"}], "}"}], ",", 
       RowBox[{"{", "0.9999999999999951`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.7071067811865435`"}], "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0.7071067811865437`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.9999999999999938`"}], "}"}], ",", 
       RowBox[{"{", "0.7071067811865428`", "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.7071067811865428`"}], "}"}], ",", 
       RowBox[{"{", "0.9999999999999925`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.7071067811865419`"}], "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0.707106781186542`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.9999999999999916`"}], "}"}], ",", 
       RowBox[{"{", "0.7071067811865405`", "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.7071067811865417`"}], "}"}], ",", 
       RowBox[{"{", "0.9999999999999902`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Functions", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "0.75`", "}"}], ",", 
       RowBox[{"{", "0.4999999999999995`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999988`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999987`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999978`", "}"}], ",", 
       RowBox[{"{", "0.4999999999999984`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999974`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999956`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999964`", "}"}], ",", 
       RowBox[{"{", "0.49999999999999734`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999952`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999938`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999938`", "}"}], ",", 
       RowBox[{"{", "0.49999999999999584`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999942`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999902`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999918`", "}"}], ",", 
       RowBox[{"{", "0.4999999999999949`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999913`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999876`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999907`", "}"}], ",", 
       RowBox[{"{", "0.4999999999999932`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999898`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999849`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999882`", "}"}], ",", 
       RowBox[{"{", "0.49999999999999234`", "}"}], ",", 
       RowBox[{"{", "0.7499999999999878`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999831`", "}"}], ",", 
       RowBox[{"{", "0.749999999999986`", "}"}], ",", 
       RowBox[{"{", "0.4999999999999907`", "}"}], ",", 
       RowBox[{"{", "0.749999999999987`", "}"}], ",", 
       RowBox[{"{", "0.9999999999999805`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"15", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "4"], ",", 
       FractionBox[
        RowBox[{"25", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"15", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"35", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "2"], ",", 
       FractionBox[
        RowBox[{"45", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"25", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"55", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"15", " ", "\[Pi]"}], "4"], ",", 
       FractionBox[
        RowBox[{"65", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"35", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"75", " ", "\[Pi]"}], "16"], ",", 
       RowBox[{"5", " ", "\[Pi]"}], ",", 
       FractionBox[
        RowBox[{"85", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"45", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"95", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"25", " ", "\[Pi]"}], "4"], ",", 
       FractionBox[
        RowBox[{"105", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"55", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"115", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"15", " ", "\[Pi]"}], "2"], ",", 
       FractionBox[
        RowBox[{"125", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"65", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"135", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"35", " ", "\[Pi]"}], "4"], ",", 
       FractionBox[
        RowBox[{"145", " ", "\[Pi]"}], "16"], ",", 
       FractionBox[
        RowBox[{"75", " ", "\[Pi]"}], "8"], ",", 
       FractionBox[
        RowBox[{"155", " ", "\[Pi]"}], "16"], ",", 
       RowBox[{"10", " ", "\[Pi]"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.566924728355589*^9, 3.566924733332999*^9}, 
   3.5680270997222357`*^9}]
}, Open  ]],

Cell["\<\
Functions do not have to return numbers; they can return anything you want. \
For example you can return subsystems:\
\>", "Text",
 CellChangeTimes->{{3.566926040163928*^9, 3.566926071194787*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "\[Rho]_", "]"}], ":=", 
  RowBox[{"PartialTr", "[", 
   RowBox[{"\[Rho]", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], ",", 
    RowBox[{"{", "1", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.566926075384172*^9, 3.566926092499298*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Customizing the output", "Subsubsection",
 CellChangeTimes->{{3.5669247868292933`*^9, 3.566924793158937*^9}}],

Cell["\<\
You may have noticed that the output of the EvalPulse was chosen \
automatically for you in the previous examples. Suppose that you want \
something other than what it\[CloseCurlyQuote]s giving you, e.g. you want \
both the States and the Observables. You can use SimulationOutput to acheive \
this.\
\>", "Text",
 CellChangeTimes->{{3.566924871476757*^9, 3.5669249529795847`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EvalPulse", "[", 
  RowBox[{
   RowBox[{"X", "/", "2"}], ",", "\[Pi]", ",", 
   RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}], ",", 
   RowBox[{"PollingInterval", "\[Rule]", "0.3"}], ",", 
   RowBox[{"Observables", "\[Rule]", 
    RowBox[{"{", "Z", "}"}]}], ",", 
   RowBox[{"SimulationOutput", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"States", ",", "Observables"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5669249710458727`*^9, 3.566924982077455*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"States", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.9797464868072486`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.1408662784207148`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.1408662784207148`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.0202535131927513`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.9206267664155905`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.2703204087277987`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.2703204087277987`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.07937323358440937`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.8274303669726425`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.377874787177129`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.377874787177129`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.1725696330273574`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.707707506500943`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.45481599767725905`", " ", "\[ImaginaryI]"}]}]}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.45481599767725905`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.2922924934990566`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.5711574191366424`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.4949107209404661`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.4949107209404661`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.4288425808633572`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.42884258086335736`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.4949107209404662`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.4949107209404662`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.5711574191366422`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.2922924934990566`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.4548159976772589`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.4548159976772589`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.7077075065009427`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.1725696330273574`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.3778747871771289`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.3778747871771289`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.8274303669726418`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.0793732335844094`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.27032040872779867`", " ", "\[ImaginaryI]"}]}]}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.27032040872779867`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.9206267664155899`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.020253513192751312`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.14086627842071484`", " ", "\[ImaginaryI]"}]}]}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.14086627842071484`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.979746486807248`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"6.933347799794049`*^-33", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"8.32667268468867`*^-17", " ", "\[ImaginaryI]"}]}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"8.32667268468867`*^-17", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.9999999999999991`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Observables", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "0.9594929736144974`", "}"}], ",", 
       RowBox[{"{", "0.8412535328311811`", "}"}], ",", 
       RowBox[{"{", "0.6548607339452851`", "}"}], ",", 
       RowBox[{"{", "0.41541501300188644`", "}"}], ",", 
       RowBox[{"{", "0.14231483827328523`", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.14231483827328484`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.4154150130018861`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.6548607339452844`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.8412535328311805`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.9594929736144967`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "0.9999999999999991`"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["\[Pi]", "11"], ",", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"6", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"8", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"9", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"10", " ", "\[Pi]"}], "11"], ",", "\[Pi]"}], "}"}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.566924968550673*^9, 3.566924982522312*^9}, 
   3.568027099772635*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["NumericEvaluation", "Subsubsection",
 CellChangeTimes->{{3.5680259111440268`*^9, 3.568025946078003*^9}, {
  3.568027203293214*^9, 3.568027206052909*^9}}],

Cell["\<\
By default in NVSim, times are turned into floating point numbers right \
before they are put into the matrix exponential (e.g. MatrixExp[-I N[t] H]):\
\>", "Text",
 CellChangeTimes->{{3.568025959298635*^9, 3.568026022322179*^9}, 
   3.56802688989555*^9, {3.56802692255867*^9, 3.5680269425153418`*^9}, {
   3.568027226124751*^9, 3.5680272285967216`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EvalPulse", "[", 
  RowBox[{
   RowBox[{"X", "/", "2"}], ",", 
   RowBox[{"\[Pi]", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.568026891498077*^9, 3.5680269006347437`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Unitaries", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.7071067811865477`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.7071067811865476`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"0.7071067811865474`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.7071067811865476`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.568026901412723*^9, 3.56802709981308*^9}]
}, Open  ]],

Cell["\<\
This can be circumvented with the NumericEvaluation option:\
\>", "Text",
 CellChangeTimes->{{3.5680269074710217`*^9, 3.568026909069839*^9}, {
   3.568026946878048*^9, 3.5680269720439663`*^9}, 3.5680270149478083`*^9, {
   3.568027048955282*^9, 3.568027051009924*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EvalPulse", "[", 
  RowBox[{
   RowBox[{"X", "/", "2"}], ",", 
   RowBox[{"\[Pi]", "/", "2"}], ",", 
   RowBox[{"NumericEvaluation", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.568026165808691*^9, 3.5680261712761717`*^9}, {
  3.5680267982149363`*^9, 3.568026835017315*^9}, {3.5680269765938797`*^9, 
  3.5680270083751917`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Unitaries", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["2"]], ",", 
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", 
             SqrtBox["2"]]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["\[ImaginaryI]", 
             SqrtBox["2"]]}], ",", 
           FractionBox["1", 
            SqrtBox["2"]]}], "}"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.568026167712144*^9, 3.568026171687735*^9}, {
   3.5680268039227324`*^9, 3.568026835339102*^9}, {3.568027004596182*^9, 
   3.56802700868447*^9}, 3.568027099928904*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Methods for formatting the output with applications toward plotting\
\>", "Subsection",
 CellChangeTimes->{{3.5669250886045322`*^9, 3.566925099431443*^9}, {
  3.566925725261538*^9, 3.566925737653811*^9}}],

Cell["\<\
The functions TimeVector, Unitaries, States, Observables, and Functions, in \
addition to serving as placeholders as seen in the previous section, can be \
used to format the output.\
\>", "Text",
 CellChangeTimes->{{3.566925110793964*^9, 3.56692518126593*^9}}],

Cell[CellGroupData[{

Cell["TimeVector", "Subsubsection",
 CellChangeTimes->{{3.566925184930951*^9, 3.566925186313298*^9}}],

Cell["\<\
TimeVector simply extracts the TimeVector:\
\>", "Text",
 CellChangeTimes->{{3.566925217919756*^9, 3.566925224280798*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{"EvalPulse", "[", 
   RowBox[{
    RowBox[{"X", "/", "2"}], ",", "\[Pi]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TimeVector", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.5669252429561872`*^9, 3.56692526701112*^9}, 
   3.566925313290275*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Unitaries", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.501337291432472`*^-16", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"1.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"1.5013372914324722`*^-16", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.56692525322075*^9, 3.56692526776749*^9}, 
   3.5669253223375053`*^9, 3.568027099937273*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "\[Pi]"}], "}"}]], "Output",
 CellChangeTimes->{{3.56692525322075*^9, 3.56692526776749*^9}, 
   3.5669253223375053`*^9, 3.568027099938551*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Unitaries", "Subsubsection",
 CellChangeTimes->{{3.566925189322419*^9, 3.566925190301659*^9}}],

Cell["\<\
Unitaries simply extracts the Unitaries:\
\>", "Text",
 CellChangeTimes->{{3.566925217919756*^9, 3.566925224280798*^9}, {
  3.566925296200691*^9, 3.566925304790753*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", "=", 
  RowBox[{"EvalPulse", "[", 
   RowBox[{
    RowBox[{"X", "/", "2"}], ",", "\[Pi]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Unitaries", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.5669252429561872`*^9, 3.56692526701112*^9}, {
  3.56692531560285*^9, 3.566925319871027*^9}, {3.566925486223118*^9, 
  3.56692548637582*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Unitaries", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.501337291432472`*^-16", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"1.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"1.5013372914324722`*^-16", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.56692525322075*^9, 3.56692526776749*^9}, 
   3.56692532022083*^9, 3.568027099982696*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.501337291432472`*^-16", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        RowBox[{"1.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"1.5013372914324722`*^-16", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.56692525322075*^9, 3.56692526776749*^9}, 
   3.56692532022083*^9, 3.568027099983862*^9}]
}, Open  ]],

Cell["\<\
Unitaries[data,t] extracts the unitary from the list Unitaries[data] whose \
time lies closest to t:\
\>", "Text",
 CellChangeTimes->{{3.566925338840214*^9, 3.566925392647998*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", "=", 
  RowBox[{"EvalPulse", "[", 
   RowBox[{
    RowBox[{"X", "/", "2"}], ",", "\[Pi]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Unitaries", "[", 
  RowBox[{"data", ",", 
   RowBox[{"\[Pi]", "/", "8"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Unitaries", "[", 
  RowBox[{"data", ",", 
   RowBox[{"3", 
    RowBox[{"\[Pi]", "/", "4"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5669254024965467`*^9, 3.566925422893347*^9}, {
  3.566925484089069*^9, 3.5669254842437487`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Unitaries", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.501337291432472`*^-16", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"1.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"1.5013372914324722`*^-16", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5669254071372337`*^9, 3.5669254232941504`*^9}, 
   3.56802710002569*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5669254071372337`*^9, 3.5669254232941504`*^9}, 
   3.5680271000267076`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1.501337291432472`*^-16", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"1.5013372914324722`*^-16", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5669254071372337`*^9, 3.5669254232941504`*^9}, 
   3.568027100027494*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["States", "Subsubsection",
 CellChangeTimes->{{3.566925189322419*^9, 3.566925190301659*^9}, {
  3.566925441760083*^9, 3.566925442440008*^9}}],

Cell["\<\
States functions identically to Unitaries. States extracts the States:\
\>", "Text",
 CellChangeTimes->{{3.566925217919756*^9, 3.566925224280798*^9}, {
  3.566925296200691*^9, 3.566925304790753*^9}, {3.5669254498309193`*^9, 
  3.5669254681310377`*^9}, {3.568027282059823*^9, 3.568027282387953*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{"EvalPulse", "[", 
   RowBox[{
    RowBox[{"X", "/", "2"}], ",", "\[Pi]", ",", 
    RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"States", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.5669252429561872`*^9, 3.56692526701112*^9}, {
  3.56692531560285*^9, 3.566925319871027*^9}, {3.5669254693197117`*^9, 
  3.566925481981683*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"States", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2.2540136626457911`*^-32", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"1.501337291432472`*^-16", " ", "\[ImaginaryI]"}]}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"1.501337291432472`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
           
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.56692525322075*^9, 3.56692526776749*^9}, 
   3.56692532022083*^9, 3.566925500254911*^9, 3.56692554294655*^9, 
   3.5680271000726357`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.2540136626457911`*^-32", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.501337291432472`*^-16", " ", "\[ImaginaryI]"}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        RowBox[{"1.501337291432472`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"1.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.56692525322075*^9, 3.56692526776749*^9}, 
   3.56692532022083*^9, 3.566925500254911*^9, 3.56692554294655*^9, 
   3.568027100073854*^9}]
}, Open  ]],

Cell["\<\
States[data,t] extracts the states from the list States[data] whose time lies \
closest to t:\
\>", "Text",
 CellChangeTimes->{{3.566925338840214*^9, 3.566925392647998*^9}, 
   3.5669254724596*^9, {3.5669255481510363`*^9, 3.566925552947669*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{"EvalPulse", "[", 
   RowBox[{
    RowBox[{"X", "/", "2"}], ",", "\[Pi]", ",", 
    RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"States", "[", 
  RowBox[{"data", ",", 
   RowBox[{"\[Pi]", "/", "8"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"States", "[", 
  RowBox[{"data", ",", 
   RowBox[{"3", 
    RowBox[{"\[Pi]", "/", "4"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5669254024965467`*^9, 3.566925422893347*^9}, {
  3.56692547516098*^9, 3.56692553503168*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"States", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2.2540136626457911`*^-32", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"1.501337291432472`*^-16", " ", "\[ImaginaryI]"}]}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            RowBox[{"1.501337291432472`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
           
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5669254071372337`*^9, 3.5669254232941504`*^9}, {
   3.566925498011187*^9, 3.5669255447622547`*^9}, 3.568027100117107*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5669254071372337`*^9, 3.5669254232941504`*^9}, {
   3.566925498011187*^9, 3.5669255447622547`*^9}, 3.5680271001183233`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2.2540136626457911`*^-32", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.501337291432472`*^-16", " ", "\[ImaginaryI]"}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"1.501337291432472`*^-16", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"1.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5669254071372337`*^9, 3.5669254232941504`*^9}, {
   3.566925498011187*^9, 3.5669255447622547`*^9}, 3.568027100119266*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Observables", "Subsubsection",
 CellChangeTimes->{{3.5669251992582703`*^9, 3.566925209908926*^9}}],

Cell["\<\
Observables[data] extracts the observables from data and transposes them. The \
transposing feature is useful for ListPlot\
\>", "Text",
 CellChangeTimes->{{3.5669255607262573`*^9, 3.566925597694968*^9}, {
  3.566925646260668*^9, 3.5669256648189898`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{"EvalPulse", "[", 
   RowBox[{
    RowBox[{"X", "/", "2"}], ",", "\[Pi]", ",", 
    RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}], ",", 
    RowBox[{"PollingInterval", "\[Rule]", "0.3"}], ",", 
    RowBox[{"Observables", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"X", ",", "Y", ",", "Z"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Observables", "[", "data", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Observables", "[", "data", "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.566922251603785*^9, 3.566922269591153*^9}, {
  3.566925624254559*^9, 3.5669256315769053`*^9}, {3.566925667867392*^9, 
  3.566925705011153*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Observables", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.2817325568414296`"}], ",", "0.9594929736144974`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.5406408174555974`"}], ",", "0.8412535328311811`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.755749574354258`"}], ",", "0.6548607339452851`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.9096319953545181`"}], ",", "0.41541501300188644`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.9898214418809322`"}], ",", "0.14231483827328523`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.9898214418809324`"}], ",", 
         RowBox[{"-", "0.14231483827328484`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.9096319953545178`"}], ",", 
         RowBox[{"-", "0.4154150130018861`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.7557495743542578`"}], ",", 
         RowBox[{"-", "0.6548607339452844`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.5406408174555973`"}], ",", 
         RowBox[{"-", "0.8412535328311805`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "0.28173255684142967`"}], ",", 
         RowBox[{"-", "0.9594929736144967`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "1.665334536937734`*^-16"}], ",", 
         RowBox[{"-", "0.9999999999999991`"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["\[Pi]", "11"], ",", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"6", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"8", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"9", " ", "\[Pi]"}], "11"], ",", 
       FractionBox[
        RowBox[{"10", " ", "\[Pi]"}], "11"], ",", "\[Pi]"}], "}"}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.566922273044454*^9, 3.5669256319876413`*^9, {3.56692568217033*^9, 
   3.566925705391553*^9}, 3.568027100165781*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
     "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "0.2817325568414296`"}], ",", 
     RowBox[{"-", "0.5406408174555974`"}], ",", 
     RowBox[{"-", "0.755749574354258`"}], ",", 
     RowBox[{"-", "0.9096319953545181`"}], ",", 
     RowBox[{"-", "0.9898214418809322`"}], ",", 
     RowBox[{"-", "0.9898214418809324`"}], ",", 
     RowBox[{"-", "0.9096319953545178`"}], ",", 
     RowBox[{"-", "0.7557495743542578`"}], ",", 
     RowBox[{"-", "0.5406408174555973`"}], ",", 
     RowBox[{"-", "0.28173255684142967`"}], ",", 
     RowBox[{"-", "1.665334536937734`*^-16"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0.9594929736144974`", ",", "0.8412535328311811`", ",", 
     "0.6548607339452851`", ",", "0.41541501300188644`", ",", 
     "0.14231483827328523`", ",", 
     RowBox[{"-", "0.14231483827328484`"}], ",", 
     RowBox[{"-", "0.4154150130018861`"}], ",", 
     RowBox[{"-", "0.6548607339452844`"}], ",", 
     RowBox[{"-", "0.8412535328311805`"}], ",", 
     RowBox[{"-", "0.9594929736144967`"}], ",", 
     RowBox[{"-", "0.9999999999999991`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.566922273044454*^9, 3.5669256319876413`*^9, {3.56692568217033*^9, 
   3.566925705391553*^9}, 3.568027100167181*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.24720000000000014`, 0.24, 0.6], 
     LineBox[{{1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}, {5., 0.}, {6., 0.}, {7.,
       0.}, {8., 0.}, {9., 0.}, {10., 0.}, {11., 0.}, {12., 0.}}]}, 
    {RGBColor[0.6, 0.24, 0.4428931686004542], 
     LineBox[{{1., 0.}, {2., -0.2817325568414296}, {
      3., -0.5406408174555974}, {4., -0.755749574354258}, {
      5., -0.9096319953545181}, {6., -0.9898214418809322}, {
      7., -0.9898214418809324}, {8., -0.9096319953545178}, {
      9., -0.7557495743542578}, {10., -0.5406408174555973}, {
      11., -0.28173255684142967`}, {12., -1.665334536937734*^-16}}]}, 
    {RGBColor[0.6, 0.5470136627990908, 0.24], 
     LineBox[{{1., 1.}, {2., 0.9594929736144974}, {3., 0.8412535328311811}, {
      4., 0.6548607339452851}, {5., 0.41541501300188644`}, {6., 
      0.14231483827328523`}, {7., -0.14231483827328484`}, {
      8., -0.4154150130018861}, {9., -0.6548607339452844}, {
      10., -0.8412535328311805}, {11., -0.9594929736144967}, {
      12., -0.9999999999999991}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  Method->{},
  PlotRange->{{0, 12.}, {-0.9999999999999991, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.24, 0.24}, {0.03999999999999998, 
   0.03999999999999998}}]], "Output",
 CellChangeTimes->{
  3.566922273044454*^9, 3.5669256319876413`*^9, {3.56692568217033*^9, 
   3.566925705391553*^9}, 3.5680271002077417`*^9}]
}, Open  ]],

Cell["\<\
Observables has an option TimeVector which you can set to true to include \
time coordinates along with the observables:\
\>", "Text",
 CellChangeTimes->{{3.566925641642927*^9, 3.566925643706826*^9}, {
  3.566925753589828*^9, 3.566925792189019*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"EvalPulse", "[", 
    RowBox[{
     RowBox[{"X", "/", "2"}], ",", "\[Pi]", ",", 
     RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}], ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.3"}], ",", 
     RowBox[{"Observables", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"X", ",", "Y", ",", "Z"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Observables", "[", 
  RowBox[{"data", ",", 
   RowBox[{"TimeVector", "\[Rule]", "True"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Observables", "[", 
    RowBox[{"data", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.566922251603785*^9, 3.566922269591153*^9}, {
  3.566925624254559*^9, 3.5669256315769053`*^9}, {3.566925667867392*^9, 
  3.566925705011153*^9}, {3.5669258148680058`*^9, 3.566925840311963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "11"], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "11"], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "11"], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "11"], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "11"], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"6", " ", "\[Pi]"}], "11"], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "11"], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"8", " ", "\[Pi]"}], "11"], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"9", " ", "\[Pi]"}], "11"], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", "\[Pi]"}], "11"], ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Pi]", ",", "0.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "11"], ",", 
       RowBox[{"-", "0.2817325568414296`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.5406408174555974`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.755749574354258`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.9096319953545181`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.9898214418809322`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"6", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.9898214418809324`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.9096319953545178`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"8", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.7557495743542578`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"9", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.5406408174555973`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.28173255684142967`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Pi]", ",", 
       RowBox[{"-", "1.665334536937734`*^-16"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "11"], ",", "0.9594929736144974`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "11"], ",", "0.8412535328311811`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "11"], ",", "0.6548607339452851`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "11"], ",", "0.41541501300188644`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "11"], ",", "0.14231483827328523`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"6", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.14231483827328484`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.4154150130018861`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"8", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.6548607339452844`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"9", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.8412535328311805`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"10", " ", "\[Pi]"}], "11"], ",", 
       RowBox[{"-", "0.9594929736144967`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Pi]", ",", 
       RowBox[{"-", "0.9999999999999991`"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.566925820421854*^9, 3.566925841073538*^9}, 
   3.568027100254525*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.24720000000000014`, 0.24, 0.6], 
     LineBox[{{0., 0.}, {0.28559933214452665`, 0.}, {0.5711986642890533, 
      0.}, {0.8567979964335799, 0.}, {1.1423973285781066`, 0.}, {
      1.427996660722633, 0.}, {1.7135959928671598`, 0.}, {1.9991953250116865`,
       0.}, {2.284794657156213, 0.}, {2.57039398930074, 0.}, {
      2.855993321445266, 0.}, {3.141592653589793, 0.}}]}, 
    {RGBColor[0.6, 0.24, 0.4428931686004542], 
     LineBox[{{0., 0.}, {0.28559933214452665`, -0.2817325568414296}, {
      0.5711986642890533, -0.5406408174555974}, {
      0.8567979964335799, -0.755749574354258}, {
      1.1423973285781066`, -0.9096319953545181}, {
      1.427996660722633, -0.9898214418809322}, {
      1.7135959928671598`, -0.9898214418809324}, {
      1.9991953250116865`, -0.9096319953545178}, {
      2.284794657156213, -0.7557495743542578}, {
      2.57039398930074, -0.5406408174555973}, {
      2.855993321445266, -0.28173255684142967`}, {
      3.141592653589793, -1.665334536937734*^-16}}]}, 
    {RGBColor[0.6, 0.5470136627990908, 0.24], 
     LineBox[{{0., 1.}, {0.28559933214452665`, 0.9594929736144974}, {
      0.5711986642890533, 0.8412535328311811}, {0.8567979964335799, 
      0.6548607339452851}, {1.1423973285781066`, 0.41541501300188644`}, {
      1.427996660722633, 0.14231483827328523`}, {
      1.7135959928671598`, -0.14231483827328484`}, {
      1.9991953250116865`, -0.4154150130018861}, {
      2.284794657156213, -0.6548607339452844}, {
      2.57039398930074, -0.8412535328311805}, {
      2.855993321445266, -0.9594929736144967}, {
      3.141592653589793, -0.9999999999999991}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  Method->{},
  PlotRange->{{0, 3.141592653589793}, {-0.9999999999999991, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.06283185307179587, 0.06283185307179587}, {
   0.03999999999999998, 0.03999999999999998}}]], "Output",
 CellChangeTimes->{{3.566925820421854*^9, 3.566925841073538*^9}, 
   3.5680271002566767`*^9}]
}, Open  ]],

Cell["\<\
Observables[data,n] extracts only the data from the n\[CloseCurlyQuote]th \
observable:\
\>", "Text",
 CellChangeTimes->{{3.566925854368545*^9, 3.566925871732469*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Observables", "[", 
    RowBox[{
     RowBox[{"EvalPulse", "[", 
      RowBox[{
       RowBox[{"X", "/", "2"}], ",", "\[Pi]", ",", 
       RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}], ",", 
       RowBox[{"PollingInterval", "\[Rule]", "0.3"}], ",", 
       RowBox[{"Observables", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"X", ",", "Y", ",", "Z"}], "}"}]}]}], "]"}], ",", "2", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.566922251603785*^9, 3.566922269591153*^9}, {
  3.566925624254559*^9, 3.5669256315769053`*^9}, {3.566925667867392*^9, 
  3.566925705011153*^9}, {3.5669258148680058`*^9, 3.566925840311963*^9}, {
  3.5669258824270687`*^9, 3.566925912486948*^9}, {3.566925958702413*^9, 
  3.566925986559095*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    LineBox[{{0., 0.}, {0.28559933214452665`, -0.2817325568414296}, {
     0.5711986642890533, -0.5406408174555974}, {
     0.8567979964335799, -0.755749574354258}, {
     1.1423973285781066`, -0.9096319953545181}, {
     1.427996660722633, -0.9898214418809322}, {
     1.7135959928671598`, -0.9898214418809324}, {
     1.9991953250116865`, -0.9096319953545178}, {
     2.284794657156213, -0.7557495743542578}, {
     2.57039398930074, -0.5406408174555973}, {
     2.855993321445266, -0.28173255684142967`}, {
     3.141592653589793, -1.665334536937734*^-16}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.9898214418809324},
  Method->{},
  PlotRange->{{0, 3.141592653589793}, {-0.9898214418809324, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.06283185307179587, 0.06283185307179587}, {
   0.019796428837618646`, 0.019796428837618646`}}]], "Output",
 CellChangeTimes->{
  3.56692591301157*^9, {3.566925961555291*^9, 3.566925986922968*^9}, 
   3.5680271002994556`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Subsubsection",
 CellChangeTimes->{{3.5669252120007772`*^9, 3.566925213512081*^9}}],

Cell["\<\
Functions[data] and Functions[data,n] behave identically to Observables; see \
the previous subsection.\
\>", "Text",
 CellChangeTimes->{{3.566925999035995*^9, 3.566926015147517*^9}, {
  3.566926109140201*^9, 3.566926120106472*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Time Dependence", "Subsection",
 CellChangeTimes->{{3.566926160875819*^9, 3.566926164498805*^9}}],

Cell[CellGroupData[{

Cell["First Example", "Subsubsection",
 CellChangeTimes->{{3.566926576136689*^9, 3.5669265778238783`*^9}}],

Cell["\<\
The Hamiltonian H can be either time dependent, in which case it is just a \
matrix, or time dependent, in which case it is a function taking one real \
argument, and returning a matrix. In the previous sections we saw many time \
dependent examples. Here is a time dependent example with a DriftPulse:\
\>", "Text",
 CellChangeTimes->{{3.56692065454774*^9, 3.566920711572877*^9}, {
  3.566926267290751*^9, 3.566926292635002*^9}, {3.5669263345220947`*^9, 
  3.566926339920052*^9}, {3.567086294681995*^9, 3.56708630376056*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"Sin", "[", "t", "]"}], "X"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{"EvalPulse", "[", 
   RowBox[{"H", ",", "5", ",", 
    RowBox[{"PollingInterval", "\[Rule]", "0.1"}], ",", 
    RowBox[{"InitialState", "\[Rule]", 
     RowBox[{"Projector", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ",", 
    RowBox[{"Observables", "\[Rule]", 
     RowBox[{"{", "Z", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Observables", "[", 
    RowBox[{"data", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.566920713759202*^9, 3.566920759723268*^9}, {
  3.5669263006542788`*^9, 3.5669265095074987`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Observables", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "0.9999500420687516`", "}"}], ",", 
       RowBox[{"{", "0.9998001732665962`", "}"}], ",", 
       RowBox[{"{", "0.9995504085678046`", "}"}], ",", 
       RowBox[{"{", "0.9992007729278319`", "}"}], ",", 
       RowBox[{"{", "0.9987513012808247`", "}"}], ",", 
       RowBox[{"{", "0.9982020385361299`", "}"}], ",", 
       RowBox[{"{", "0.9975530395738089`", "}"}], ",", 
       RowBox[{"{", "0.9968043692391527`", "}"}], ",", 
       RowBox[{"{", "0.9959561023362034`", "}"}], ",", 
       RowBox[{"{", "0.9950083236202802`", "}"}], ",", 
       RowBox[{"{", "0.9939611277895111`", "}"}], ",", 
       RowBox[{"{", "0.9928146194753705`", "}"}], ",", 
       RowBox[{"{", "0.9915689132322256`", "}"}], ",", 
       RowBox[{"{", "0.9902241335258903`", "}"}], ",", 
       RowBox[{"{", "0.9887804147211886`", "}"}], ",", 
       RowBox[{"{", "0.9872379010685299`", "}"}], ",", 
       RowBox[{"{", "0.9855967466894967`", "}"}], ",", 
       RowBox[{"{", "0.9838571155614438`", "}"}], ",", 
       RowBox[{"{", "0.9820191815011162`", "}"}], ",", 
       RowBox[{"{", "0.9800831281472806`", "}"}], ",", 
       RowBox[{"{", "0.9780491489423774`", "}"}], ",", 
       RowBox[{"{", "0.9759174471131933`", "}"}], ",", 
       RowBox[{"{", "0.9736882356505555`", "}"}], ",", 
       RowBox[{"{", "0.9713617372880495`", "}"}], ",", 
       RowBox[{"{", "0.9689381844797662`", "}"}], ",", 
       RowBox[{"{", "0.9664178193770745`", "}"}], ",", 
       RowBox[{"{", "0.9638008938044275`", "}"}], ",", 
       RowBox[{"{", "0.9610876692342007`", "}"}], ",", 
       RowBox[{"{", "0.9582784167605677`", "}"}], ",", 
       RowBox[{"{", "0.955373417072412`", "}"}], ",", 
       RowBox[{"{", "0.952372960425283`", "}"}], ",", 
       RowBox[{"{", "0.9492773466123942`", "}"}], ",", 
       RowBox[{"{", "0.9460868849346703`", "}"}], ",", 
       RowBox[{"{", "0.9428018941698411`", "}"}], ",", 
       RowBox[{"{", "0.9394227025405921`", "}"}], ",", 
       RowBox[{"{", "0.9359496476817699`", "}"}], ",", 
       RowBox[{"{", "0.9323830766066462`", "}"}], ",", 
       RowBox[{"{", "0.9287233456722459`", "}"}], ",", 
       RowBox[{"{", "0.9249708205437419`", "}"}], ",", 
       RowBox[{"{", "0.9211258761579187`", "}"}], ",", 
       RowBox[{"{", "0.9171888966857111`", "}"}], ",", 
       RowBox[{"{", "0.9131602754938188`", "}"}], ",", 
       RowBox[{"{", "0.909040415105403`", "}"}], ",", 
       RowBox[{"{", "0.9048297271598673`", "}"}], ",", 
       RowBox[{"{", "0.9005286323717295`", "}"}], ",", 
       RowBox[{"{", "0.8961375604885856`", "}"}], ",", 
       RowBox[{"{", "0.8916569502481696`", "}"}], ",", 
       RowBox[{"{", "0.8870872493345183`", "}"}], ",", 
       RowBox[{"{", "0.8824289143332398`", "}"}], ",", 
       RowBox[{"{", "0.8776824106858938`", "}"}], ",", 
       RowBox[{"{", "0.8776824106858938`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["1", "10"], ",", 
       FractionBox["1", "5"], ",", 
       FractionBox["3", "10"], ",", 
       FractionBox["2", "5"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["3", "5"], ",", 
       FractionBox["7", "10"], ",", 
       FractionBox["4", "5"], ",", 
       FractionBox["9", "10"], ",", "1", ",", 
       FractionBox["11", "10"], ",", 
       FractionBox["6", "5"], ",", 
       FractionBox["13", "10"], ",", 
       FractionBox["7", "5"], ",", 
       FractionBox["3", "2"], ",", 
       FractionBox["8", "5"], ",", 
       FractionBox["17", "10"], ",", 
       FractionBox["9", "5"], ",", 
       FractionBox["19", "10"], ",", "2", ",", 
       FractionBox["21", "10"], ",", 
       FractionBox["11", "5"], ",", 
       FractionBox["23", "10"], ",", 
       FractionBox["12", "5"], ",", 
       FractionBox["5", "2"], ",", 
       FractionBox["13", "5"], ",", 
       FractionBox["27", "10"], ",", 
       FractionBox["14", "5"], ",", 
       FractionBox["29", "10"], ",", "3", ",", 
       FractionBox["31", "10"], ",", 
       FractionBox["16", "5"], ",", 
       FractionBox["33", "10"], ",", 
       FractionBox["17", "5"], ",", 
       FractionBox["7", "2"], ",", 
       FractionBox["18", "5"], ",", 
       FractionBox["37", "10"], ",", 
       FractionBox["19", "5"], ",", 
       FractionBox["39", "10"], ",", "4", ",", 
       FractionBox["41", "10"], ",", 
       FractionBox["21", "5"], ",", 
       FractionBox["43", "10"], ",", 
       FractionBox["22", "5"], ",", 
       FractionBox["9", "2"], ",", 
       FractionBox["23", "5"], ",", 
       FractionBox["47", "10"], ",", 
       FractionBox["24", "5"], ",", 
       FractionBox["49", "10"], ",", "5", ",", "5"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.566926375143009*^9, {3.566926413617498*^9, 3.5669265100710487`*^9}, 
   3.566927112129243*^9, 3.5680262743228207`*^9, 3.5680271003783083`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJxlzV1Ik2EUB/BtbrXM2lfzooIlSkhSGHN9aHUO0YRiBUVIyaJRblGtEraL
TPq4SAz7oHbRsDSNwotUlLwoB5VaEsX6cGNbMVlLmyx9974bargSLe05F9Ef
Hh4envP/nZwjZ/ZZJSKRqOjPmbv/TRLu1M+lGwo2ZJa4ZwX2fgPNQ0HePCOA
fj5+6FRV5u6dpv/PcLixZMSRFuCvE4XOwM+d/ZM0PwwfZW9txpQAtvmMAAR1
5RNj1P8OgaveUl9MgHfeuXDgy03v/xIhLwlx0+rHK0I0nwLcWnCr9j354+C2
Fq3J7af+BNjEfR7eQ/t+QOHllprRDvKmYGxY6s9+SF4a2nr2JB1u8n7B9ePb
CyV15E2D/3l8tLeavBmoSbnOd9nJE2HZqk+7QmaaF6HG5/KsNZEvxnu7I5uf
FFNfgtUfNCXOfNqXgRmNrw1WLXlSrJzsb6kTkyfF5qhCGeN45skwEA5NOUM8
8xbgiYoLieJennkL8YHlxsWNj3jmybHZ1m086eKZJ8f7X/3hYBV5i7BJOzB0
zkJeJp4SvxAdKCVvMZp0fdHTBeRlYZlUpe9RkJeFDRGhzTSeYN4SXO9rlWuD
CeYtxW2G27LlTxPMU+CO1tlj5voE85RYr9OnB6toXonlTZW1DQcTzFfioDoe
u7uJ+ir0Bru4cDbtU+FKg//soQmOeWoUnuXZcwY45qnRfcnSnt/OMU+NL/PU
+c4rHPM0uO6byys9yjFPg68qMm6Gt5C3DK85jPa09v/3b5s7dek=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8776824106858938},
  Method->{},
  PlotRange->{{0, 5.}, {0.8776824106858938, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.1, 0.1}, {0.002446351786282124, 
   0.002446351786282124}}]], "Output",
 CellChangeTimes->{
  3.566926375143009*^9, {3.566926413617498*^9, 3.5669265100710487`*^9}, 
   3.566927112129243*^9, 3.5680262743228207`*^9, 3.568027100392726*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Controlling the StepSize", "Subsubsection",
 CellChangeTimes->{{3.566926581865328*^9, 3.566926587088254*^9}}],

Cell[TextData[{
 "NVSim simulates time dependence by discretizing the time domain and \
assuming the Hamiltonian is constantly equal to the Hamiltonian at the \
midpoint on each of these small intervals. If no StepSize is given, one is \
automatically calculated by taking a tenth of the inverse of the norm of the \
Hamiltonian, minimized over all time. This may work, but in some cases this \
fails (eg your Hamiltonian is unbounded over time, eg ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "=", 
    RowBox[{
     SuperscriptBox["t", "2"], "X"}]}], TraditionalForm]]],
 "), and in some cases a value that is too small or too large is chosen. In \
these latter cases you will want to choose the value yourself:"
}], "Text",
 CellChangeTimes->{{3.566926688495604*^9, 3.566926906815144*^9}, {
  3.56692718482264*^9, 3.566927186884712*^9}, {3.5670863763846188`*^9, 
  3.567086377692316*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"Sin", "[", "t", "]"}], "X"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"data", "=", 
  RowBox[{"EvalPulse", "[", 
   RowBox[{"H", ",", "5", ",", 
    RowBox[{"PollingInterval", "\[Rule]", "0.1"}], ",", 
    RowBox[{"InitialState", "\[Rule]", 
     RowBox[{"Projector", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ",", 
    RowBox[{"Observables", "\[Rule]", 
     RowBox[{"{", "Z", "}"}]}], ",", 
    RowBox[{"StepSize", "\[Rule]", "0.01"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Observables", "[", 
    RowBox[{"data", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.566920713759202*^9, 3.566920759723268*^9}, {
  3.5669263006542788`*^9, 3.5669265095074987`*^9}, {3.566927072160615*^9, 
  3.566927081476378*^9}, {3.566927117218894*^9, 3.566927146076934*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Observables", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "0.9999500832701723`", "}"}], ",", 
       RowBox[{"{", "0.9998003380640489`", "}"}], ",", 
       RowBox[{"{", "0.9995507793312115`", "}"}], ",", 
       RowBox[{"{", "0.9992014319859714`", "}"}], ",", 
       RowBox[{"{", "0.9987523309048834`", "}"}], ",", 
       RowBox[{"{", "0.9982035209232616`", "}"}], ",", 
       RowBox[{"{", "0.9975550568307059`", "}"}], ",", 
       RowBox[{"{", "0.9968070033656296`", "}"}], ",", 
       RowBox[{"{", "0.9959594352087979`", "}"}], ",", 
       RowBox[{"{", "0.995012436975873`", "}"}], ",", 
       RowBox[{"{", "0.993966103208964`", "}"}], ",", 
       RowBox[{"{", "0.9928205383671911`", "}"}], ",", 
       RowBox[{"{", "0.9915758568162555`", "}"}], ",", 
       RowBox[{"{", "0.9902321828170235`", "}"}], ",", 
       RowBox[{"{", "0.9887896505131185`", "}"}], ",", 
       RowBox[{"{", "0.9872484039175303`", "}"}], ",", 
       RowBox[{"{", "0.9856085968982401`", "}"}], ",", 
       RowBox[{"{", "0.9838703931628545`", "}"}], ",", 
       RowBox[{"{", "0.982033966242267`", "}"}], ",", 
       RowBox[{"{", "0.98009949947333`", "}"}], ",", 
       RowBox[{"{", "0.978067185980553`", "}"}], ",", 
       RowBox[{"{", "0.9759372286568238`", "}"}], ",", 
       RowBox[{"{", "0.9737098401431512`", "}"}], ",", 
       RowBox[{"{", "0.9713852428074365`", "}"}], ",", 
       RowBox[{"{", "0.968963668722274`", "}"}], ",", 
       RowBox[{"{", "0.9664453596417816`", "}"}], ",", 
       RowBox[{"{", "0.9638305669774684`", "}"}], ",", 
       RowBox[{"{", "0.9611195517731314`", "}"}], ",", 
       RowBox[{"{", "0.9583125846787983`", "}"}], ",", 
       RowBox[{"{", "0.9554099459237053`", "}"}], ",", 
       RowBox[{"{", "0.952411925288321`", "}"}], ",", 
       RowBox[{"{", "0.949318822075418`", "}"}], ",", 
       RowBox[{"{", "0.9461309450801905`", "}"}], ",", 
       RowBox[{"{", "0.9428486125594291`", "}"}], ",", 
       RowBox[{"{", "0.9394721521997434`", "}"}], ",", 
       RowBox[{"{", "0.9360019010848535`", "}"}], ",", 
       RowBox[{"{", "0.9324382056619342`", "}"}], ",", 
       RowBox[{"{", "0.9287814217070288`", "}"}], ",", 
       RowBox[{"{", "0.9250319142895302`", "}"}], ",", 
       RowBox[{"{", "0.9211900577357359`", "}"}], ",", 
       RowBox[{"{", "0.9172562355914775`", "}"}], ",", 
       RowBox[{"{", "0.9132308405838288`", "}"}], ",", 
       RowBox[{"{", "0.9091142745819006`", "}"}], ",", 
       RowBox[{"{", "0.9049069485567185`", "}"}], ",", 
       RowBox[{"{", "0.9006092825401951`", "}"}], ",", 
       RowBox[{"{", "0.8962217055831977`", "}"}], ",", 
       RowBox[{"{", "0.8917446557127137`", "}"}], ",", 
       RowBox[{"{", "0.88717857988812`", "}"}], ",", 
       RowBox[{"{", "0.8825239339565641`", "}"}], ",", 
       RowBox[{"{", "0.8777811826074524`", "}"}], ",", 
       RowBox[{"{", "0.8777811826074524`", "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.1`", ",", "0.2`", ",", "0.30000000000000004`", ",", "0.4`",
        ",", "0.5`", ",", "0.6`", ",", "0.7000000000000001`", ",", "0.8`", 
       ",", "0.9`", ",", "1.`", ",", "1.1`", ",", "1.2000000000000002`", ",", 
       "1.3000000000000003`", ",", "1.4000000000000001`", ",", 
       "1.5000000000000002`", ",", "1.6`", ",", "1.7000000000000002`", ",", 
       "1.8000000000000003`", ",", "1.9000000000000001`", ",", "2.`", ",", 
       "2.1`", ",", "2.2`", ",", "2.3000000000000003`", ",", 
       "2.4000000000000004`", ",", "2.5000000000000004`", ",", "2.6`", ",", 
       "2.7`", ",", "2.8000000000000003`", ",", "2.9000000000000004`", ",", 
       "3.0000000000000004`", ",", "3.1`", ",", "3.2`", ",", 
       "3.3000000000000003`", ",", "3.4000000000000004`", ",", 
       "3.5000000000000004`", ",", "3.6`", ",", "3.7`", ",", 
       "3.8000000000000003`", ",", "3.9000000000000004`", ",", "4.`", ",", 
       "4.1`", ",", "4.2`", ",", "4.3`", ",", "4.3999999999999995`", ",", 
       "4.5`", ",", "4.6`", ",", "4.7`", ",", "4.8`", ",", "4.9`", ",", "5.`",
        ",", "5"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.566926375143009*^9, {3.566926413617498*^9, 3.5669265100710487`*^9}, 
   3.566927082049478*^9, {3.566927114821989*^9, 3.566927146881012*^9}, 
   3.568027100441534*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQjQo+2M+aCQI77T2faARO//8eyj9p31oZ4B777729
iTEIXLaPSq99FfgHJn/TXu8Bv0fpz/f2EHMe2K/zPFh0/Ot7e7By48f2NocW
N3l8fG+fngYCz+ybmhWn/ngN0//S/o3inzPXn763P3sGBN7YB6z0Dnp2D2be
B/t502qDVK7D1H+0n7IumGHSOZh7Ptsf2vhosv7R9/bnwPq/2He+neD1dxfM
vm/2FatE0n+vf2/PCDbvh/328iJDrSUw837aPw3+/a1zOsy83/b+m724pLtg
5v2x90t2OXy3GmbeP/sMb6H6Szkw9zE4LOVWWvAzBuZ+BocFFUp9wT4w8xkd
TL4ybHtgBdPP5HBo5bPOhRow+5gdXGaaNk4ThbmPxcFmSqvEAUaYeSwOjZwL
L8q9fQc1j9VBc2uj8ebr76DmsTl46vqeqj34Dmoeu4OWb6B6/ap3UPM4HJrq
GB5un/QOah6Hg9rDt5M0qmDmcTqYBp68ezEBZh6Xwybv6PQtbjDzuB2+bGy4
dUEbZh6Pw9RstefqAjDzeBzmPHdx2vX5LdQ8XoeomttLO669hZrH51C77PWF
yTveQs3jd0hSL2m/M/MtNPwEHI4w5UxKrnprD1aeJuDwJHrvfs2ot1DzBRwc
jBwe6Vu+haYnQQfdf1sulom/tQdbN1PQQUV3f9b/L2+g5gk5ONbd7zt18Q3U
PCGH+3Z5KjfXvoGaJ+TQmD5VTKfzDdQ8YQe9mV6hR5LfQN0v7ND72+PqIluY
eSIOM35zTTghhskHANKZdVo=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8777811826074524},
  Method->{},
  PlotRange->{{0, 5.}, {0.8777811826074524, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.1, 0.1}, {0.002444376347850952, 
   0.002444376347850952}}]], "Output",
 CellChangeTimes->{
  3.566926375143009*^9, {3.566926413617498*^9, 3.5669265100710487`*^9}, 
   3.566927082049478*^9, {3.566927114821989*^9, 3.566927146881012*^9}, 
   3.568027100443022*^9}]
}, Open  ]],

Cell["\<\
You can check the value that would be chosen automatically with GetStepSize:\
\>", "Text",
 CellChangeTimes->{{3.5669275030469017`*^9, 3.566927522207389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"Sin", "[", "t", "]"}], "X"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GetStepSize", "[", "H", "]"}]}], "Input",
 CellChangeTimes->{{3.5669275282184362`*^9, 3.5669275357389317`*^9}}],

Cell[BoxData[
 FractionBox["1", "10"]], "Output",
 CellChangeTimes->{3.5669275366657677`*^9, 3.568027100502643*^9}]
}, Open  ]],

Cell[TextData[StyleBox["To be clear: the StepSize and the PollingInterval are \
completely different and unrelated numbers. As an illustration, increasing \
the StepSize will decrease the accuracy of the simulation, whereas increasing \
the PollingInterval will simply course grain your plots.",
 Background->RGBColor[0.94, 0.88, 0.94]]], "Text",
 CellChangeTimes->{{3.566926603285411*^9, 3.5669266317520447`*^9}, {
  3.566926922605887*^9, 3.566927055209648*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Shaped Pulses", "Subsection",
 CellChangeTimes->{{3.5669261692993717`*^9, 3.566926173455524*^9}}],

Cell[TextData[{
 "The pulse shape can be specified either in a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " matrix, or as a path to an external text file."
}], "Text",
 CellChangeTimes->{{3.566927610361597*^9, 3.566927631297534*^9}}],

Cell[CellGroupData[{

Cell["Example with matrix", "Subsubsection",
 CellChangeTimes->{{3.566927574080451*^9, 3.566927596585785*^9}}],

Cell["\<\
In this example we use two control Hamiltonians, and only a handful of steps. \
The first element in each row of the shape matrix is the time of that step, \
and the rest are the amplitudes of the same step.\
\>", "Text",
 CellChangeTimes->{{3.566927829447857*^9, 3.5669278982475567`*^9}, {
  3.56692796079963*^9, 3.566927968676043*^9}, {3.566928196103106*^9, 
  3.5669281972423697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"shape", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.5", ",", ".1", ",", ".2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1.4", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.", ",", ".3", ",", ".4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", ".1", ",", ".2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1.4", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.", ",", ".3", ",", ".4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", ".1", ",", ".2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1.4", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hctl1", "=", 
   RowBox[{"X", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hctl2", "=", 
   RowBox[{"Y", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"EvalPulse", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Z", "/", "2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"shape", ",", 
       RowBox[{"{", 
        RowBox[{"Hctl1", ",", "Hctl2"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"StepSize", "\[Rule]", 
      SuperscriptBox["10", 
       RowBox[{"-", "2"}]]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PollingInterval", "\[Rule]", "0.01"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"Projector", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Observables", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"X", "+", "Y"}], ",", "Y", ",", "Z"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Observables", "[", 
    RowBox[{"data", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.56692794371247*^9, 3.566928121669026*^9}, 
   3.5679516191397552`*^9, {3.5679516547224483`*^9, 3.567951656294677*^9}, 
   3.567951739482939*^9, {3.567952423415572*^9, 3.56795242477431*^9}, {
   3.567952462142013*^9, 3.567952464291711*^9}, {3.567952582486868*^9, 
   3.5679526143662786`*^9}, {3.5679542752509117`*^9, 3.567954286834453*^9}, {
   3.5679546888414087`*^9, 3.5679546894886227`*^9}, {3.567957117126769*^9, 
   3.567957136817216*^9}, 3.5679604366787767`*^9, {3.5679605282075167`*^9, 
   3.567960553304184*^9}, {3.5679605855319033`*^9, 3.567960592844825*^9}, {
   3.567960766464867*^9, 3.567960815521885*^9}, 3.567961060260993*^9, 
   3.5679616943794622`*^9, {3.567961732647468*^9, 3.567961755852336*^9}, {
   3.567962053689065*^9, 3.5679620684905453`*^9}, {3.5679636447725677`*^9, 
   3.567963666409614*^9}, {3.567969480798238*^9, 3.567969594613368*^9}, {
   3.567969638461644*^9, 3.567969639987195*^9}, {3.567969683568015*^9, 
   3.567969709601798*^9}, 3.567969754330365*^9, {3.5679701767438507`*^9, 
   3.567970179975251*^9}, {3.5680258172048407`*^9, 3.568025887589237*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
zgz/ZMVrpXxycP6A9WNLhC00PjgYB8EzPkW3UH45OOvMw3lDPVvo/MvBM9qu
11JXtlC+OXja080317CFxg8HXQ2cj8xtaqb8c/DgHLcE9stmOi9zcKdlWeRv
J5vJg4seuZPiM1Yy5ykuHj87feH7Ic3kwUU/3Zy3o2qayIOL7K2a15oim8iD
i2vqun83PNREHlx0cBRYxls1kQcXX1UdYb3XaCIPLt7ftEjHMruRPLjo5Wbc
NOpqI3lwsVqlyfjoZuZ8yUXFIxthyahGOr9zsWWeJPtsfQN5cGXjSbzbKqKB
PLi47MSqiD3ODeTBxcczoscNtGggDy52PFrj/Vt3PXlw0fSqtn1RfD15cGXr
xayt7R715MHFhvyYqQFQTx5czDz62TOKVU8eXHzz50yWTWIdeXBxlBLL7uB/
deTBRe4Wrw0mVnXkwcWuuw4P/mLVkQcXs48eUxssqCUPHk4dkztruwfzPoCH
LQFwwk1cQx48ZLFvLrffVkMePKzujV8yvqCaPHjoVjXYqmZBNXnwcPQcTa0r
MVXkwcN1dZXXl5hUkQcP0cBcpHmxkjx4mPzs/Yian0Ly4GHONv3VVf8KyYOH
B5dPfMMtrCAPHq51l4YdsmLe3/DwqLHljjHh5eQhuz9Z4e/ReuXkwUP7bQ06
yt1fyYOHrjPWhZ1L/UIePJSsPhDcE1hGHjwsdHlm5ritlDx4OO2qomvjpBLy
4OG3LfzcG71F5MHDAYMCgvxSCsmDh2997OdX+BeQBw87PuTNDNmYTx48nJ9V
y2oblUcePPQQuI2ubs4hDz4OVnSf7ReTTR58DDaZWqh1LIs8+FjmXGJa7ZNJ
Hnx0Ltg4PHp4BnnwsVul+GNkVBp58FH/ta+d9rwU8uDjoVGHdHpyk8mDj8+D
YjqDHd6RBx8fZPfZu7cJyIOP7ncM3SuHxZMHH/18x/MqF8eQBx+3zdqQU3Dw
KXnwcZat6uqZax+SBx+Vy58aWHndJg8+jkifdPh40Wny4OOdTP+RRx3d6f20
LD7p1gm7Llyj9+F8XCaceX6oRSi9f+djluP0W2evRwrkHny83rt0Wcih5/Q+
m4+8oqdXcoe/pPfnfCxwPqDgKnhN7+v5WOIZ5DTIPFEg9+Djq6zZ7kUuSfT+
m4+RTr4l6S+Z/0fp4WmhxemUnhTB/wAKPg0R
      "]]}, 
    {RGBColor[0.6, 0.24, 0.4428931686004542], LineBox[CompressedData["
1:eJxd13k8VPv/B3D7MhizlFS+iuqWlltoUbd6vyvtG0ppUVLaaCG3bnVvV1Kp
JG22m4p0k0ob3RYZISFkZ4xlZjBmJDtZ85N5zz+/84/HceZ8zuf9er7P8jFx
PmTnoqKkpNSurKT08+//304OiVkqOuED0dcC45Zb2fDk+zfgR9XEG6OZTrzX
xme/2r6+DZyrhX/HF+6h45Fweprh0GSPQ7zQkJ/bQ9Bmj+n82+MI783g72OA
VcWqG2VwjDewM/Cf5zD04m37CZEn6PxY6DF+mOJldIrHKL53eB7jPzgydNwj
X54Xb3C4kDfwuuf9dpGLN89s65Wk9gnxkPa1bBwo+9B8EmC7RXZD4NWzvMiB
s4vvJYJl0evv5QbnefWD1/sAkZHSdO2rvrzplj+3ZPCyMPiNpXSRrp8CRdmP
D9TuvMRLbp8wcIWPwNnNzD0b78fTGZzPJ/h9XaGJWNufZzd4wTSYMGrI/taV
V6jedIi+nu7lsCCAJz7xc8AMGDtcY6l2cQDNNxOWtT1X1tpzlef+c3qHs8Az
tCnXpvkq5ZMNR63NlYS/X+PJFXLguPey3udt16ieHJAk+jomH7jOWyb6eYFc
cH3PF7NE16m+XEj4mu0RtOYGLyDpZwF5YJceP3L9qxu8wXIt8+HkqCyuteFN
3mA5xfngb8l5s8vzJtVfACuqg6++zLjJG/VzOsaFMDn2+MpfRwZSHoWwOlEa
n+cSyNuz++dWBJx71tW3owMpn2KIXjhWGiAL5P0cbUhMMdy/uHPYA9MgyqsE
fFlTZZX2QbyOn8O1l0B1BLNv9pkgyo8PvKSGEbHRQbz5gw1QCsM0zSxXZwZR
nqVgvP/SNjVpEG9wemcFMNlrW0VJXxDlWwac4P1GGXrBvKzMn1sZFKf0RBcP
C6a8y8E7p9pa2SiYN3RwghWw0PB01pIRwZR/Bey0jbOJ4gTzBofbWgnBsxpV
flEPJg8hDBk7dkFis6IeIZxQ2Xfh6cUI8hGCR4LF4mEjH1J9QnjGN+0PeviU
vEQQ2/1wEX/ES6pXBL8fn9FwZPsr8hNB0tp/QrdGvKH6xeB6ZZz6+qp48hTD
ZgPJeT12Ik8+nBjWPTm1c/bTD+RbBfUbzS2Zq5IpnyrYviU3xq02hbyroGrJ
legZp1Mpr2pwDbMfvmJ4GvlXw/5JY/QvPU2n/KpBUOqczF/0mfqhBuaW4PVh
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
      "]]}, 
    {RGBColor[0.6, 0.5470136627990908, 0.24], LineBox[CompressedData["
1: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
H2oN7RE=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  Method->{},
  PlotRange->{{0, 5.}, {-0.5807428582868758, 1.2335089119370797`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.1, 0.1}, {0.03628503540447911, 
   0.03628503540447911}}]], "Output",
 CellChangeTimes->{{3.5669281113070374`*^9, 3.56692812215591*^9}, 
   3.567951457322476*^9, 3.567951584473188*^9, 3.5679516196922398`*^9, 
   3.567951656702671*^9, {3.56795172907672*^9, 3.567951740245233*^9}, {
   3.567951805000743*^9, 3.567951813528803*^9}, 3.567952326088417*^9, 
   3.56795237080442*^9, 3.567952425301301*^9, 3.567952465002391*^9, {
   3.56795257861201*^9, 3.567952615398818*^9}, {3.567953877953054*^9, 
   3.567953893109439*^9}, {3.5679542465061083`*^9, 3.567954287695199*^9}, 
   3.5679546497898073`*^9, {3.567954685141614*^9, 3.567954737047162*^9}, {
   3.567957106466552*^9, 3.567957137220282*^9}, {3.5679604316787148`*^9, 
   3.567960437759128*^9}, {3.567960534769081*^9, 3.567960554469356*^9}, 
   3.567960587646139*^9, {3.567960789543302*^9, 3.567960816262143*^9}, 
   3.567961061601183*^9, 3.567961695213766*^9, {3.567961744643688*^9, 
   3.567961758062993*^9}, {3.5679620561375723`*^9, 3.567962069318605*^9}, {
   3.567963649737492*^9, 3.567963667196657*^9}, 3.567963711313427*^9, 
   3.567963771769889*^9, 3.567968987236744*^9, 3.567969070788742*^9, 
   3.5679691669124813`*^9, {3.567969476114294*^9, 3.567969502485909*^9}, {
   3.5679695484810057`*^9, 3.5679696065524178`*^9}, {3.5679696409036694`*^9, 
   3.567969710520335*^9}, {3.56796974715602*^9, 3.567969760390562*^9}, 
   3.567969916286075*^9, {3.567969958688593*^9, 3.567969988217883*^9}, 
   3.567970019245002*^9, 3.5679700815843573`*^9, {3.56797017276996*^9, 
   3.5679701975901833`*^9}, {3.5680258184217043`*^9, 3.568025872714802*^9}, 
   3.568026286101994*^9, 3.568027100773535*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example with file", "Subsubsection",
 CellChangeTimes->{{3.566927598993552*^9, 3.566927603553371*^9}}],

Cell[TextData[{
 "Every line of the file should be separated by some delimeter (comma, tab, I\
\[CloseCurlyQuote]m not sure what else woud work). The first column contains \
the time steps, the second to last column contain the amplitudes. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is pretty clever when importing files, so you can use scientific notation \
(0.5e-9) and stuff."
}], "Text",
 CellChangeTimes->{{3.56692849927446*^9, 3.566928524320711*^9}, {
  3.566928569076007*^9, 3.566928587691605*^9}, {3.566928911243009*^9, 
  3.5669289421269827`*^9}, {3.566928993285379*^9, 3.566929017209277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hctl1", "=", 
   RowBox[{"X", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hctl2", "=", 
   RowBox[{"Y", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"EvalPulse", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Z", "/", "2"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<shape.csv\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Hctl1", ",", "Hctl2"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PollingInterval", "\[Rule]", ".05"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"Projector", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Observables", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"X", ",", "Y", ",", "Z"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Observables", "[", 
    RowBox[{"data", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.566928294529024*^9, 3.56692833907707*^9}, {
   3.5669284735306473`*^9, 3.56692849385111*^9}, 3.566928601051188*^9, {
   3.56692865070885*^9, 3.566928658221571*^9}, {3.5670865017247267`*^9, 
   3.567086501846896*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
PjaW
      "]]}, 
    {RGBColor[0.6, 0.24, 0.4428931686004542], LineBox[CompressedData["
1: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
fvhemr9XFe9/NztMbQ==
      "]]}, 
    {RGBColor[0.6, 0.5470136627990908, 0.24], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  Method->{},
  PlotRange->{{0, 13.}, {-0.7346451935337213, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.26, 0.26}, {0.034692903870674426`, 
   0.034692903870674426`}}]], "Output",
 CellChangeTimes->{
  3.566928494408873*^9, 3.566928658973782*^9, {3.566928968156611*^9, 
   3.566928980956334*^9}, 3.567086503408304*^9, 3.5680262945917263`*^9, 
   3.568026364919615*^9, 3.568027101012309*^9}]
}, Open  ]],

Cell["\<\
You can import the file to the matrix form as used in the previous subsection \
with GetPulseShapeMatrix:\
\>", "Text",
 CellChangeTimes->{{3.566928669547592*^9, 3.566928707673623*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GetPulseShapeMatrix", "[", "\"\<shape.csv\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.566928709030878*^9, 3.566928720506708*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.2`", ",", "0.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.9`", ",", "0.03`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.1`", ",", "0.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.1`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.2`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.1`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.2`", ",", "0.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.9`", ",", "0.03`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.1`", ",", "0.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.1`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.2`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.1`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.2`", ",", "0.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.9`", ",", "0.03`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.1`", ",", "0.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.1`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.2`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.1`", ",", "0.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.2`", ",", "0.3`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.9`", ",", "0.03`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.1`", ",", "0.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.1`", ",", "0.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "0.2`", ",", "1.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.566928721639859*^9, 3.568026368647197*^9, 
  3.56802710114789*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Unitary and Channel Pulses", "Subsection",
 CellChangeTimes->{{3.56803838405064*^9, 3.568038421153038*^9}}],

Cell["\<\
As stated at the beginning of this document, unitary and channel pulses make \
a lot more sense in the context of pulse sequences, which is the next \
section. These two kinds of pulses ignore the Hamiltonian, and apply some \
other operator. Nevertheless, they can be used with EvalPulse if you want.\
\>", "Text",
 CellChangeTimes->{{3.5680384613540077`*^9, 3.5680385440010967`*^9}, {
  3.568039117924502*^9, 3.5680391192174883`*^9}}],

Cell[CellGroupData[{

Cell["Unitary Example", "Subsubsection",
 CellChangeTimes->{{3.5680384493143806`*^9, 3.568038451645884*^9}}],

Cell["\<\
Perform a haadamard gate \[OpenCurlyDoubleQuote]lasting\
\[CloseCurlyDoubleQuote] 2 units of time:\
\>", "Text",
 CellChangeTimes->{{3.56803851607163*^9, 3.5680385179924994`*^9}, {
  3.568038549688015*^9, 3.568038574391622*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EvalPulse", "[", 
  RowBox[{
   RowBox[{"Z", "/", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HadamardMatrix", "[", "2", "]"}], ",", "2"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.56803857651712*^9, 3.568038596105493*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Unitaries", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["2"]], ",", 
           FractionBox["1", 
            SqrtBox["2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["2"]], ",", 
           RowBox[{"-", 
            FractionBox["1", 
             SqrtBox["2"]]}]}], "}"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.568038596742648*^9}]
}, Open  ]],

Cell["Let the initial state be up:", "Text",
 CellChangeTimes->{{3.568038610949449*^9, 3.5680386148644114`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EvalPulse", "[", 
  RowBox[{
   RowBox[{"Z", "/", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HadamardMatrix", "[", "2", "]"}], ",", "2"}], "}"}], ",", 
   RowBox[{"InitialState", "\[Rule]", 
    RowBox[{"Projector", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5680386213729362`*^9, 3.5680386316858788`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"States", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.56803863214482*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Channel Example", "Subsubsection",
 CellChangeTimes->{{3.568038454601697*^9, 3.568038456550049*^9}}],

Cell["\<\
Channel pulses use the Superoperator package written mostly by Chris Wood.\
\>", "Text",
 CellChangeTimes->{{3.568038649839862*^9, 3.5680387111431637`*^9}}],

Cell["\<\
We use the channel which traces out the second qubit and replaces it with the \
\[OpenCurlyDoubleQuote]up\[CloseCurlyDoubleQuote] state. Because channels are \
not in general unitary transformations, it is not possible to ask EvalPulse \
to return the Unitaries output. If you try, the operator will be aborted, as \
in the following example:\
\>", "Text",
 CellChangeTimes->{{3.568038720144744*^9, 3.568038790595372*^9}, {
  3.568038862693437*^9, 3.568038969437582*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{"Choi", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"PartialTr", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}], "\[CircleTimes]", 
       RowBox[{"Projector", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], "]"}]}], "&"}], ",", "4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"EvalPulse", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Z", "\[CircleTimes]", "\[DoubleStruckOne]"}], "+", 
    RowBox[{"\[DoubleStruckOne]", "\[CircleTimes]", "Z"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"S", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.568038804966157*^9, 3.568038854375597*^9}, {
  3.5680388969453773`*^9, 3.568038904690453*^9}, {3.568038949343111*^9, 
  3.568038956589884*^9}}],

Cell[BoxData["\<\"Error: You cannot perform a ChannelPulse and ask for \
Unitaries as an output. Specify an InitialState and/or remove Unitaries from \
SimulationOptions.\"\>"], "Print",
 CellChangeTimes->{3.568038951753214*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.5680389052991123`*^9, {3.56803894232897*^9, 3.568038951795763*^9}}]
}, Open  ]],

Cell["\<\
If we specify an initial state, then it will work:\
\>", "Text",
 CellChangeTimes->{{3.568038996221614*^9, 3.568039014636898*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{"Choi", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"PartialTr", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}], "\[CircleTimes]", 
       RowBox[{"Projector", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], "]"}]}], "&"}], ",", "4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"EvalPulse", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Z", "\[CircleTimes]", "\[DoubleStruckOne]"}], "+", 
    RowBox[{"\[DoubleStruckOne]", "\[CircleTimes]", "Z"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"S", ",", "2"}], "}"}], ",", 
   RowBox[{"InitialState", "\[Rule]", 
    RowBox[{
     SubscriptBox["\[DoubleStruckOne]", "4"], "/", "4"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.568039020822654*^9, 3.56803903167458*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"States", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "4"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"0", ",", 
           FractionBox["1", "4"], ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           FractionBox["1", "4"], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", 
           FractionBox["1", "4"]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           FractionBox["1", "2"], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"TimeVector", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.568039032332321*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Pulse Sequences", "Subsection",
 CellChangeTimes->{{3.566926234244091*^9, 3.566926240057225*^9}}],

Cell["\<\
Pulse sequences can be simulated using the \
EvalPulseSequence[H,{p1,p2,p3,...}] function. This function does little more \
than evaluate EvalPulse[H,p1], EvalPulse[H,p2], etc. back to back. The \
\[OpenCurlyDoubleQuote]little more\[CloseCurlyDoubleQuote] it does do is very \
convenient: it ties the end result of the previous pulse into the initial \
conditions of the current pulse. For example, on the first pulse it will take \
InitialState as the initial state, but on subsequent pulses it will take the \
end state of the previous pulse as the initial state.\
\>", "Text",
 CellChangeTimes->{{3.566929046817157*^9, 3.566929254599923*^9}, {
  3.566929339519618*^9, 3.5669293399070683`*^9}}],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.566929301422955*^9, 3.566929302230193*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s just perform some random collection of pulses.\
\>", "Text",
 CellChangeTimes->{{3.5669300744172707`*^9, 3.566930097885935*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"X", "+", "Z"}], ")"}], "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "0.5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"{", 
    RowBox[{"X", ",", "0.5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", ".1", ",", ".2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1.4", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.", ",", ".3", ",", ".4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", ".1", ",", ".2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "/", "2"}], ",", 
       RowBox[{"Y", "/", "2"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p6", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p7", "=", "p1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"EvalPulseSequence", "[", 
    RowBox[{
     RowBox[{"Z", "/", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", 
       "p7"}], "}"}], ",", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{"Projector", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ",", 
     RowBox[{"Observables", "\[Rule]", 
      RowBox[{"{", "X", "}"}]}], ",", 
     RowBox[{"PollingInterval", "\[Rule]", "0.1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Observables", "[", 
    RowBox[{"data", ",", 
     RowBox[{"TimeVector", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5669293431774187`*^9, 3.5669293434208603`*^9}, {
  3.5669295632988567`*^9, 3.5669297753953648`*^9}, {3.5669298129596653`*^9, 
  3.566929895642593*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
o/zzQlH7/M/9hJWUP16ovW6b937NQ+4PXWpZtw==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  Method->{},
  PlotRange->{{0, 20.5}, {-0.9991351502732841, 1.0000000000000069`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.41000000000000003`, 0.41000000000000003`}, {
   0.039982703005465824`, 0.039982703005465824`}}]], "Output",
 CellChangeTimes->{{3.566929753659198*^9, 3.566929778484243*^9}, {
   3.566929813866548*^9, 3.5669298960364313`*^9}, 3.5670865709501743`*^9, 
   3.568026379903846*^9, 3.568026776740906*^9, 3.5680271012148457`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symbolic Example", "Subsubsection",
 CellChangeTimes->{{3.568027445458255*^9, 3.568027448018278*^9}}],

Cell["\<\
We want to simulate the following circuit:\
\>", "Text",
 CellChangeTimes->{{3.568039808240736*^9, 3.568039815759549*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
yRuStZLbddcHRI//A+RsJHs=
    "], {{0, 112}, {514, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{514, 112},
  PlotRange->{{0, 514}, {0, 112}}]], "Input"],

Cell[TextData[{
 "Where R is a refresh operation that traces out the qubit and replaces it \
with a nearly polarized state.\nWe set the bottom line as the first qubit, \
and the top line as the second qubit, in our tensor product.\nAs output, we \
want to know the probability that the first qubit is measured to be in the \
state {1,0}.\nWe can do this by tracking ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0"},
       {"0", "0"}
      }], ")"}], "\[CircleTimes]", "\[DoubleStruckOne]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as an observable."
}], "Text",
 CellChangeTimes->{{3.5680318998829317`*^9, 3.568031935785275*^9}, {
  3.568039852365665*^9, 3.568039896469825*^9}, {3.568040983766363*^9, 
  3.568041136941337*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"BlockMatrix", "[", 
    RowBox[{
     RowBox[{"\[Epsilon]", " ", "Z"}], ",", 
     RowBox[{
      RowBox[{"\[CapitalSigma]", " ", 
       SubscriptBox["\[DoubleStruckOne]", "2"]}], "+", 
      RowBox[{"\[Delta]", " ", "X"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{
    RowBox[{"HadamardMatrix", "[", "2", "]"}], "\[CircleTimes]", 
    "\[DoubleStruckOne]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{"Choi", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{"{", 
         RowBox[{"p0", ",", "p1"}], "}"}], "]"}], "\[CircleTimes]", 
       RowBox[{"PartialTr", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], ",", 
         RowBox[{"{", "1", "}"}]}], "]"}]}], "&"}], ",", "4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", "\[IndentingNewLine]", 
   RowBox[{"EvalPulseSequence", "[", "\[IndentingNewLine]", 
    RowBox[{"H", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"S", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CNOT", "[", 
          RowBox[{"2", ",", "1"}], "]"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CNOT", "[", 
          RowBox[{"1", ",", "2"}], "]"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"S", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"U", ",", "1"}], "}"}], ",", "\[Tau]", ",", 
       RowBox[{"{", 
        RowBox[{"U", ",", "1"}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InitialState", "\[Rule]", 
      RowBox[{
       SubscriptBox["\[DoubleStruckOne]", "4"], "/", "4"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Observables", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Projector", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], "]"}], "\[CircleTimes]", 
        "\[DoubleStruckOne]"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "@", 
  RowBox[{"ComplexExpand", "@", 
   RowBox[{"Last", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Observables", "[", "data", "]"}]}]}]}]}]}], "Input",
 CellChangeTimes->{{3.5680274504033203`*^9, 3.568027699351108*^9}, {
  3.568027755581696*^9, 3.568027760077713*^9}, {3.568031719160901*^9, 
  3.568031858183783*^9}, {3.5680399141686783`*^9, 3.568039922425695*^9}, {
  3.5680400171108513`*^9, 3.568040172144538*^9}, {3.568040216402673*^9, 
  3.568040222196419*^9}, {3.568040361235978*^9, 3.568040373555088*^9}, {
  3.56804041206537*^9, 3.568040437616776*^9}, {3.568040610632648*^9, 
  3.568040735489909*^9}, {3.568040816821512*^9, 3.568040863610812*^9}, {
  3.56804095238832*^9, 3.568040955069624*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"p0", "+", "p1"}], ")"}], "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"p0", "-", "p1"}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Delta]", " ", "\[Tau]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p0", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Epsilon]", "-", "\[CapitalSigma]"}], ")"}], " ", 
          "\[Tau]"}], "]"}]}], "+", 
       RowBox[{"p1", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Epsilon]", "+", "\[CapitalSigma]"}], ")"}], " ", 
          "\[Tau]"}], "]"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.5680276963449717`*^9, 3.5680276996633787`*^9}, {
   3.56803177767584*^9, 3.568031786190794*^9}, {3.5680318195136147`*^9, 
   3.5680318588232393`*^9}, 3.5680401741857853`*^9, 3.568040222711887*^9, 
   3.568040331915381*^9, {3.568040365871914*^9, 3.568040374084244*^9}, {
   3.5680404208561373`*^9, 3.568040441914085*^9}, {3.568040632460182*^9, 
   3.568040737351626*^9}, {3.56804081929935*^9, 3.5680408643378057`*^9}, 
   3.568040955880481*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Drawing pulse sequences", "Subsubsection",
 CellChangeTimes->{{3.5669276494813232`*^9, 3.56692765327319*^9}, {
  3.5669309159164762`*^9, 3.5669309173040648`*^9}}],

Cell["\<\
This feature still needs some work, but, for example:\
\>", "Text",
 CellChangeTimes->{{3.566927672050089*^9, 3.566927683029127*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"shapedpulse", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"\[Pi]", "/", "8"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", 
         RowBox[{"\[Pi]", "/", "4"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"\[Pi]", "/", "16"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"X", "/", "2"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"X", "+", "Z"}], ")"}], "/", 
        RowBox[{"Sqrt", "[", "2", "]"}]}], ",", ".1"}], "}"}], ",", "2", ",", 
     "shapedpulse", ",", "2", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"X", "+", "Z"}], ")"}], "/", 
        RowBox[{"Sqrt", "[", "2", "]"}]}], ",", ".1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DrawSequence", "[", "seq", "]"}]}], "Input",
 CellChangeTimes->{{3.566927692535342*^9, 3.566927717003087*^9}, {
  3.566927934415139*^9, 3.566927937851488*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Arrowheads[0.02], ArrowBox[{{0, 0}, {500, 0}}, -25], 
   InsetBox["\<\"t\"\>", 
    NCache[{Rational[1600, 3], 0}, {533.3333333333334, 0}]], {{
     LineBox[{{0., 0}, {0., 80.}, {20.58823529411765, 80.}, {
       20.58823529411765, 0}}], InsetBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.7071067811865475`", "0.7071067811865475`"},
         {"0.7071067811865475`", 
          RowBox[{"-", "0.7071067811865475`"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", 
       ")"}], {10.294117647058824`, -13.333333333333332`}]}, {
     InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalH]\\), \
\\(drift\\)]\\)\"\>", {113.23529411764707`, -10.}], 
     InsetBox["\<\"  2.0s\"\>", {113.23529411764707`, -20.}]}, {{
      LineBox[{{205.88235294117646`, 1.0705959767814766`}, {208.8235294117647,
        1.0705959767814766`}}], 
      LineBox[{{208.8235294117647, 3.1145360215969986`}, {211.76470588235293`,
        3.1145360215969986`}}], 
      LineBox[{{211.76470588235293`, 7.531030007779895}, {214.70588235294116`,
        7.531030007779895}}], 
      LineBox[{{214.70588235294116`, 15.139671957203712`}, {217.6470588235294,
        15.139671957203712`}}], 
      LineBox[{{217.6470588235294, 25.320849169505003`}, {220.58823529411765`,
        25.320849169505003`}}], 
      LineBox[{{220.58823529411765`, 35.29083295443269}, {223.52941176470588`,
        35.29083295443269}}], 
      LineBox[{{223.52941176470588`, 41.158086177669496`}, {
       226.47058823529412`, 41.158086177669496`}}], 
      LineBox[{{226.47058823529412`, 40.59828335607439}, {229.41176470588235`,
        40.59828335607439}}], 
      LineBox[{{229.41176470588235`, 34.85477385938486}, {232.35294117647058`,
        34.85477385938486}}], 
      LineBox[{{232.35294117647058`, 28.00437569549666}, {235.2941176470588, 
       28.00437569549666}}], 
      LineBox[{{235.2941176470588, 24.223549164521092`}, {238.23529411764704`,
        24.223549164521092`}}], 
      LineBox[{{238.23529411764704`, 25.626864710334647`}, {
       241.17647058823528`, 25.626864710334647`}}], 
      LineBox[{{241.17647058823528`, 32.050655961612804`}, {
       244.11764705882354`, 32.050655961612804`}}], 
      LineBox[{{244.11764705882354`, 42.021938023930375`}, {
       247.05882352941177`, 42.021938023930375`}}], 
      LineBox[{{247.05882352941177`, 53.6366229315766}, {250., 
       53.6366229315766}}], 
      LineBox[{{250., 64.93084913408083}, {252.94117647058823`, 
       64.93084913408083}}], 
      LineBox[{{252.94117647058823`, 74.03102404530975}, {255.88235294117646`,
        74.03102404530975}}], 
      LineBox[{{255.88235294117646`, 79.37258606862976}, {258.8235294117647, 
       79.37258606862976}}], 
      LineBox[{{258.8235294117647, 80.}, {261.7647058823529, 80.}}], 
      LineBox[{{261.7647058823529, 75.79663780270118}, {264.70588235294116`, 
       75.79663780270118}}], 
      LineBox[{{264.70588235294116`, 67.50673710782696}, {267.6470588235294, 
       67.50673710782696}}], 
      LineBox[{{267.6470588235294, 56.51725879325694}, {270.5882352941176, 
       56.51725879325694}}], 
      LineBox[{{270.5882352941176, 44.478671822232734`}, {273.52941176470586`,
        44.478671822232734`}}], 
      LineBox[{{273.52941176470586`, 32.90480146627739}, {276.4705882352941, 
       32.90480146627739}}], 
      LineBox[{{276.4705882352941, 22.882500606653746`}, {279.4117647058823, 
       22.882500606653746`}}], 
      LineBox[{{279.4117647058823, 14.958375583104305`}, {282.3529411764706, 
       14.958375583104305`}}], 
      LineBox[{{282.3529411764706, 9.191833050261334}, {285.2941176470588, 
       9.191833050261334}}], 
      LineBox[{{285.2941176470588, 5.309535943618886}, {288.2352941176471, 
       5.309535943618886}}], 
      LineBox[{{288.2352941176471, 2.8830206017135804`}, {291.17647058823525`,
        2.8830206017135804`}}], 
      LineBox[{{291.17647058823525`, 1.4715521910680793`}, {
       294.11764705882354`, 1.4715521910680793`}}]}, {
      LineBox[{{208.8235294117647, 0}, {208.8235294117647, 
        3.1145360215969986`}}], 
      LineBox[{{211.76470588235293`, 0}, {211.76470588235293`, 
        7.531030007779895}}], 
      LineBox[{{214.70588235294116`, 0}, {214.70588235294116`, 
        15.139671957203712`}}], 
      LineBox[{{217.6470588235294, 0}, {217.6470588235294, 
        25.320849169505003`}}], 
      LineBox[{{220.58823529411765`, 0}, {220.58823529411765`, 
        35.29083295443269}}], 
      LineBox[{{223.52941176470588`, 0}, {223.52941176470588`, 
        41.158086177669496`}}], 
      LineBox[{{226.47058823529412`, 0}, {226.47058823529412`, 
        41.158086177669496`}}], 
      LineBox[{{229.41176470588235`, 0}, {229.41176470588235`, 
        40.59828335607439}}], 
      LineBox[{{232.35294117647058`, 0}, {232.35294117647058`, 
        34.85477385938486}}], 
      LineBox[{{235.2941176470588, 0}, {235.2941176470588, 
        28.00437569549666}}], 
      LineBox[{{238.23529411764704`, 0}, {238.23529411764704`, 
        25.626864710334647`}}], 
      LineBox[{{241.17647058823528`, 0}, {241.17647058823528`, 
        32.050655961612804`}}], 
      LineBox[{{244.11764705882354`, 0}, {244.11764705882354`, 
        42.021938023930375`}}], 
      LineBox[{{247.05882352941177`, 0}, {247.05882352941177`, 
        53.6366229315766}}], LineBox[{{250., 0}, {250., 64.93084913408083}}], 
      LineBox[{{252.94117647058823`, 0}, {252.94117647058823`, 
        74.03102404530975}}], 
      LineBox[{{255.88235294117646`, 0}, {255.88235294117646`, 
        79.37258606862976}}], 
      LineBox[{{258.8235294117647, 0}, {258.8235294117647, 80.}}], 
      LineBox[{{261.7647058823529, 0}, {261.7647058823529, 80.}}], 
      LineBox[{{264.70588235294116`, 0}, {264.70588235294116`, 
        75.79663780270118}}], 
      LineBox[{{267.6470588235294, 0}, {267.6470588235294, 
        67.50673710782696}}], 
      LineBox[{{270.5882352941176, 0}, {270.5882352941176, 
        56.51725879325694}}], 
      LineBox[{{273.52941176470586`, 0}, {273.52941176470586`, 
        44.478671822232734`}}], 
      LineBox[{{276.4705882352941, 0}, {276.4705882352941, 
        32.90480146627739}}], 
      LineBox[{{279.4117647058823, 0}, {279.4117647058823, 
        22.882500606653746`}}], 
      LineBox[{{282.3529411764706, 0}, {282.3529411764706, 
        14.958375583104305`}}], 
      LineBox[{{285.2941176470588, 0}, {285.2941176470588, 
        9.191833050261334}}], 
      LineBox[{{288.2352941176471, 0}, {288.2352941176471, 
        5.309535943618886}}], 
      LineBox[{{291.17647058823525`, 0}, {291.17647058823525`, 
        2.8830206017135804`}}]}, InsetBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", 
          FractionBox["\[Pi]", "8"]},
         {"4", 
          FractionBox["\[Pi]", "4"]},
         {"3", 
          FractionBox["\[Pi]", "16"]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", 
       ")"}], {250., -10.}], InsetBox["\<\"  8.0s\"\>", {250., -20.}]}, {
     InsetBox["\<\"\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalH]\\), \
\\(drift\\)]\\)\"\>", {386.76470588235304`, -10.}], 
     InsetBox["\<\"  2.0s\"\>", {386.76470588235304`, -20.}]}, {
     LineBox[{{479.4117647058824, 0}, {479.4117647058824, 80.}, {500., 80.}, {
       500., 0}}], InsetBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0.7071067811865475`", "0.7071067811865475`"},
         {"0.7071067811865475`", 
          RowBox[{"-", "0.7071067811865475`"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", 
       ")"}], {489.7058823529412, -13.333333333333332`}]}}}]], "Output",
 CellChangeTimes->{{3.566927701927067*^9, 3.5669277179568253`*^9}, 
   3.5669279382593117`*^9, 3.5680271012716637`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Tips, Tricks and Troubleshooting\
\>", "Subsection",
 CellChangeTimes->{{3.566929909043436*^9, 3.5669299269508257`*^9}, {
  3.567086596322262*^9, 3.567086596734953*^9}, {3.568031986727665*^9, 
  3.56803198948199*^9}}],

Cell[CellGroupData[{

Cell["EvalPulse/EvalPulseSequence not evaluating", "Subsubsection",
 CellChangeTimes->{{3.566929935990396*^9, 3.566929954896121*^9}, 
   3.567009272334811*^9, 3.568025895940609*^9}],

Cell["\<\
Sometimes something won\[CloseCurlyQuote]t evaluate at all:\
\>", "Text",
 CellChangeTimes->{{3.5669299807541428`*^9, 3.566929988025855*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"X", "+", "Z"}], ")"}], "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", "0.5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", "X"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", ".1", ",", ".2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1.4", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.", ",", ".3", ",", ".4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", ".1", ",", ".2"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", "/", "2"}], ",", 
       RowBox[{"Y", "/", "2"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p6", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p7", "=", "p1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EvalPulseSequence", "[", 
  RowBox[{
   RowBox[{"Z", "/", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", "p7"}], 
    "}"}], ",", 
   RowBox[{"InitialState", "\[Rule]", 
    RowBox[{"Projector", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "]"}]}], ",", 
   RowBox[{"Observables", "\[Rule]", 
    RowBox[{"{", "X", "}"}]}], ",", 
   RowBox[{"PollingInterval", "\[Rule]", "0.1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.566929991787924*^9, 3.566930000949057*^9}}],

Cell[BoxData[
 RowBox[{"EvalPulseSequence", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["2"]], ",", 
           FractionBox["1", 
            SqrtBox["2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["2"]], ",", 
           RowBox[{"-", 
            FractionBox["1", 
             SqrtBox["2"]]}]}], "}"}]}], "}"}], ",", "0.5`"}], "}"}], ",", 
     "5", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", "5", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0.1`", ",", "0.2`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1.4`", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.`", ",", "0.3`", ",", "0.4`"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0.1`", ",", "0.2`"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             FractionBox["1", "2"]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox["1", "2"], ",", "0"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["\[ImaginaryI]", "2"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox["\[ImaginaryI]", "2"], ",", "0"}], "}"}]}], "}"}]}], 
        "}"}]}], "}"}], ",", "5", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["2"]], ",", 
           FractionBox["1", 
            SqrtBox["2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["2"]], ",", 
           RowBox[{"-", 
            FractionBox["1", 
             SqrtBox["2"]]}]}], "}"}]}], "}"}], ",", "0.5`"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"InitialState", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Observables", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "}"}]}], ",", 
   RowBox[{"PollingInterval", "\[Rule]", "0.1`"}]}], "]"}]], "Output",
 CellChangeTimes->{3.566930001773899*^9, 3.568027101291521*^9}]
}, Open  ]],

Cell["\<\
This is often caused by inputs in the wrong format. You can use PulseQ to \
test which of the pulses are valid:\
\>", "Text",
 CellChangeTimes->{{3.5669300089296637`*^9, 3.566930038494134*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PulseQ", "/@", 
  RowBox[{"{", 
   RowBox[{
   "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", "p7"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.566930039821062*^9, 3.566930046073963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "False", ",", "True", ",", "True", ",", "True", 
   ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.566930046474556*^9, 3.568027101338825*^9}]
}, Open  ]],

Cell["\<\
We see that we forgot to include the time of the unitary pulse p3.\
\>", "Text",
 CellChangeTimes->{{3.56693004983355*^9, 3.5669300698893948`*^9}, {
  3.5680359670596647`*^9, 3.568035967761673*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulating ranges of parameters", "Subsubsection",
 CellChangeTimes->{{3.5669301816655827`*^9, 3.5669301914293127`*^9}}],

Cell["\<\
Simulating ranges of parameters is not builtin, but you can get around this \
with not too much effort. Suppose we want to simulate a Ramsey experiment (\
\[Pi]/2 - \[Tau] - \[Pi]/2: now vary \[Tau] and take the FT).\
\>", "Text",
 CellChangeTimes->{{3.5669301983042583`*^9, 3.566930290616556*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rot", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"MatrixExp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], " ", 
         RowBox[{"\[Pi]", "/", "4"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Sx", "+", "Sxp"}], ")"}], "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}]}], "]"}], "\[CircleTimes]", 
       "\[DoubleStruckOne]"}], "//", "N"}], ",", 
     RowBox[{"1", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "8"}]]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ham", "[", "t_", "]"}], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Hint", "=", " ", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], 
         RowBox[{
          RowBox[{"NVHamiltonian", "[", "]"}], "\[CircleTimes]", 
          "\[DoubleStruckOne]"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"MatrixExp", "[", 
        RowBox[{"I", " ", "t", " ", "Hint"}], "]"}], ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]], 
          RowBox[{"NVHamiltonian", "[", 
           RowBox[{
            RowBox[{"\"\<nitrogenIsotope\>\"", "\[Rule]", "14"}], ",", 
            RowBox[{"\"\<B\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"10", ",", "0", ",", "0"}], "}"}]}]}], "]"}]}], "-", 
         "Hint"}], ")"}], ".", 
       RowBox[{"MatrixExp", "[", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "t", " ", "Hint"}], "]"}]}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]0", "=", 
   RowBox[{
    RowBox[{"Projector", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}], "\[CircleTimes]", 
    RowBox[{"\[DoubleStruckOne]", "/", "3"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.566930295321033*^9, 3.56693035100774*^9}, {
   3.566930406458503*^9, 3.566930655270303*^9}, {3.566930704669992*^9, 
   3.566930717331963*^9}, {3.566930818667272*^9, 3.566930852345028*^9}, {
   3.566931138441875*^9, 3.566931159004827*^9}, {3.567009269719495*^9, 
   3.56700927042579*^9}, {3.5670817014089947`*^9, 3.567081738000301*^9}, 
   3.567082598797627*^9}],

Cell[TextData[StyleBox["Warning: this will take like 20 minutes to run.",
 Background->RGBColor[0.94, 0.88, 0.94]]], "Text",
 CellChangeTimes->{{3.567086114389282*^9, 3.567086132359434*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"\[Tau]", ",", "\[IndentingNewLine]", 
       RowBox[{"Last", "@", 
        RowBox[{"Last", "@", 
         RowBox[{"Observables", "@", 
          RowBox[{"EvalPulseSequence", "[", "\[IndentingNewLine]", 
           RowBox[{"Ham", ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"rot", ",", "\[Tau]", ",", "rot"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"StepSize", "\[Rule]", 
             RowBox[{"0.3", " ", 
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"InitialState", "\[Rule]", "\[Rho]0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Observables", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Projector", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}], 
               "\[CircleTimes]", "\[DoubleStruckOne]"}], "}"}]}]}], 
           "\[IndentingNewLine]", "]"}]}]}]}]}], "\[IndentingNewLine]", "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", ".01", ",", "10", ",", ".01"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.566930662613534*^9, 3.566930692692531*^9}, {
  3.566930729865086*^9, 3.566930831826042*^9}, {3.566930871627689*^9, 
  3.566930903589102*^9}, {3.5669309388075533`*^9, 3.566931019459907*^9}, {
  3.5669312584707193`*^9, 3.5669313108507566`*^9}, {3.5670817452633467`*^9, 
  3.567081783593507*^9}, {3.56708182845481*^9, 3.5670819245043287`*^9}, {
  3.567081958211279*^9, 3.567081993401375*^9}, {3.5670823146358967`*^9, 
  3.56708232711415*^9}, {3.567082486443391*^9, 3.567082486704523*^9}, {
  3.5670825570243597`*^9, 3.567082559447344*^9}, {3.567082959830599*^9, 
  3.567082972732644*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscreteFourierPlot", "[", 
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05", ",", "5"}], "}"}], ",", 
   RowBox[{"{", "Abs", "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.567082346996676*^9, 3.5670823519285297`*^9}, {
  3.567082413947027*^9, 3.5670824196483088`*^9}, {3.567082479607794*^9, 
  3.567082496173921*^9}, {3.567082721069045*^9, 3.567082726916481*^9}, {
  3.5670827665213823`*^9, 3.567082814042789*^9}, {3.567082844134315*^9, 
  3.567082865207674*^9}, {3.567082912985689*^9, 3.5670829221727467`*^9}, {
  3.567084878015679*^9, 3.567084905294793*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1: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
uHdpIP544QVrvaVx/znfIS+8YBV+d3Xc9yvkhRdULFd+V9vcRl544cmRoeKs
xhbywhsb+Q+DVARN5IU3zDWSQ7+x/iEvvLHb9BTD1aonL7yhaJZnu2nnYfLC
G0eTxzYkq9aSF97gXS2T+zDvEHnhDcHwjuMXEg6QF974Voj51//dR154ozdI
9YF51F6a7yTrKZo32+r4blofCxyRNc9t+C7qXxZaF+S4K1ntpPWyoPW656t8
VxX1Mwv7yyoHXlWpovWzkBr2ZVhQ2TaaB1lIy721zlh7G90PC6Pb/H0Kqiup
3yXv1zKa/erkVro/Fow1Mt90J26h/pdc75OCfoFXBd0vC0tq/7I9blFBecDC
R5+l7RsLN9P9s+C+osd1uFw55QMLPQ+LK0aMK6P9YMHQfulgF9kyygsWIq5f
WJM9qoz2h4Vbi5WvcEtLKT9YiH4rM21TQAn5ysKLxbJHTL+VUJ6w8FrVfond
vRLylo2PPypMFkSXUL6wMbiUP7RO4usff9mw+qTVHXW3iOZTNuTetz/5q7Df
YzaODeUNPjuhmPKHjQ2rlWu+dxaSz2wceXY5I0QyT/zJIzbuWESrmn4pYKKk
DcPGbn/ja1HrCimf2HjN7j63WDK//PGbjdjWFxpOR/Mpr9hwnbH5ukdkPnnO
xkavD1VOFvmUX2w0NT1TfWmaT76z4RDk+vzfvTmUZ2yoXRzSyRblkfdsvBrQ
fEXlTTblGxs6u6rq1JxzyH82MgwmfbJ5kUV5J7m/qn1uHouyaR7wQdy6keMv
zcmm/POB7UrFgjvVGTQf+GCxkinL/UP//OwDqzE7P/rpZdK84INdR2/s/5bQ
P0/7QC2Dd/jKonSaH3xwNdhoZ4phGuWlD9iWz3TWKqTTPOEDu1t3fROsM2je
9sG2AAuj2XtTab7wQZTbtR3Ro1MpT32wRfnB2sUWYpo3fGCdvP4/luT70Z98
9YH7q00nV30U0/zhg9Tpsu2uqimUtz7gG6qPGJ2dQvOID1iPEgrXV6ZQ/vqg
tzpPsW6PmOYTyeMS65yi5f2/R/pAq8J574bp/b8PcPDx8Cjrd7v7fx/jQO35
iM0mC0U0v3DwtXXlZFe3/t9zONhtca59gHX/74EchHy3MnjYJKT85qDme2Tx
4O1Cmm84SPUdvut3aP/vnxzwxUrCZbeSad7hwNKQu15wOZnynYPJm6qmXvAS
0vzDwafPP9R189ZR3nPgdm9EzL5diTQPcfC4RZVtUZ5M+c9BrMID3Sd/J9N8
xEHK1NqYt7b9v7dy8Nca75X+Tgk0L3HgsYFd9uLvJPKBg2+pH8/vqVpH8xMH
417oVf9ckURe+KK24L9X6pUJNE/5on3AG3O1zQnkhy/qD7yZNMwxkeYrX6QO
Vbk+/kEieeILvbEFIi53Nc1bvnhdlOCwrn01+eKL6Hs7lim4JND8JXn9/rld
3x3XkDe+KD3X3N0bmEDzmC/stG+lzDsfR/74ghdwYeQpuTU0n/niWZ7pp/qG
OPr+4otfQW0LvCXX+zOv+cINuvuikuPIJ1/IqgevEt5fRfObL1btORs3rCee
vPIFy71YJrU4luY5X4mPNfptBfHkly9Ga9T3WN+Mo/nOF/vNmqffORxPXnBh
32tXHqi5grzg4kTMnR7L6bHkBRcVYUEvtgviyQsuDgU0IkM3nrzgInOTkf+r
3hjyggsFpQQHtU/LyQsuDP63cO4Yr1jygovxAdY6DvNXkReS52VyMtdeiiEv
uBjw+ObjY2XR5AUXXzoSOlt1YsgLLsbcTj9+p2olecFF2wenZxuiVpIXXJzb
KxeyUy2KvOBiSonyMzOb5eQFF73WjcaTJPf7xwsu6rV2XggwiCUvuDA+53RN
pzyavOBiWhb325AnkeQFF3FGjXfeWMSQFzxwr6UWGO2KIS94+Knz9GpW2jLy
goeAwNGNEV+Xkhc83Pi8NvzKxSjygoeQNfqa/MYY8oKHf1et+nfs00jygoep
EZpvZzsvJS94iK346XtdNpq+3/FwLGjHpe0rlpIXPCT1DH89wiyavOChuYuz
AsZh5IXkcWzdV3ud5eQFD8MnxsxoiokiL3j4WFLAzpJc/48XPNwyHyj+n91i
8oKH23UtE/kRkeQFDzFqq/dUjY4mLyT38/PpVPslEeQFD+smyB46vWMRecFD
zrqj8kah4eQFH7MFuflXS6LICz4cWptCN6lEkhd8tBmPHdrpFkZe8KHVwV76
j+wi8oKPeVend47rWEpe8KG7dpCpb2sYecGHvXz66qU7lpAXfFyKzJs8kxtC
XvAR8dD3pKF8JHnBR2z5O7uRBeHkBR8vp52ZZ/cwhLzgI/z9wYTI0YvJCz6W
ZNmc+b1vEXnBh375w9E7+BHkBR+Z8tNq//0VTF7w4SfjxGtcH0pe8GF1aEvd
LbVw8oKPJzINI0wqFpMXfKxS3M1OnxNKXvDRrhnb7dAcSF74odXoUrX/rjDy
wg/VSZERt1dGkRd+6HBQPuJYH0xe+CFnxoNE5cuB5IUfhKumbzncEUxe+OF1
6bR0t5BI8sIPKuWqgw2+LSEv/DByukJLPpdPXvghkNHNTeoOJi/8oDZ7lsEr
hzDywg8f13D9d9dFkBd+8JhrYFvTEERe+GHR8q5SZsTf5IUfxmd/5aVdWUhe
+CH6t1n8lewl9P3BD7wtTYmzvEPJCz8UW+21XrEkkLzww+eWw6fyHi0gL/yQ
+SJJycRuCXnhj5JhXQsPF4aSF/5QMrpYMWFmMHnhD4slNb3qA0LIC3+Y/afk
qtsYRF74I2bGBVWLkYuZ/wNDOQQh
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  ImageSize->{681., Automatic},
  Method->{},
  PlotRange->{{0, 100.8080808080808}, {0, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{2.0161616161616163`, 2.0161616161616163`}, {0., 
   0.}}]], "Output",
 CellChangeTimes->{{3.567082480642836*^9, 3.56708249664746*^9}, 
   3.5670827158281527`*^9, 3.5670827718094587`*^9, 3.567082814852557*^9, {
   3.567082846775338*^9, 3.5670828655763607`*^9}, {3.567082918177497*^9, 
   3.567082922681492*^9}, 3.567084794058436*^9, {3.567084878889729*^9, 
   3.567084905814365*^9}}]
}, Open  ]],

Cell["\<\
<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"
   xmlns:cc=\"http://creativecommons.org/ns#\"
   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"
   xmlns:svg=\"http://www.w3.org/2000/svg\"
   xmlns=\"http://www.w3.org/2000/svg\"
   version=\"1.1\"
   width=\"744.09448\"
   height=\"1052.3622\"
   id=\"svg2\">
  <defs
     id=\"defs4\" />
  <metadata
     id=\"metadata7\">
    <rdf:RDF>
      <cc:Work
         rdf:about=\"\">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     id=\"layer1\">
    <path
       d=\"m 60.609153,255.35182 513.157497,0\"
       id=\"path3125\"
       style=\"fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;\
stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:\
none\" />
    <g
       transform=\"translate(278.65997,-113.13709)\"
       id=\"g3081-7\">
      <rect
         width=\"50.507626\"
         height=\"50.507626\"
         x=\"224.25386\"
         y=\"345.2554\"
         id=\"rect2985-6-1\"
         style=\"fill:#ffffff;stroke:#000000;stroke-width:1;stroke-miterlimit:\
4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\" />
      <g
         transform=\"matrix(0.7295918,0,0,0.7295918,17.846028,117.76162)\"
         id=\"g3055-3\">
        <g
           transform=\"matrix(1.0629921,0,0,-1.0629921,-186.02362,789.27165)\"\

           id=\"content-3\"
           xml:space=\"preserve\"
           style=\"font-style:normal;font-variant:normal;font-weight:normal;\
font-stretch:normal;letter-spacing:normal;word-spacing:normal;text-anchor:\
start;fill:none;stroke:#000000;stroke-linecap:butt;stroke-linejoin:miter;\
stroke-miterlimit:10.43299961;stroke-opacity:1;stroke-dasharray:none;stroke-\
dashoffset:0\"><path
             d=\"m 472.36,438.42 h 4.14 c -0.53,-2.1 -1.29,-5.27 -1.29,-8.02 \
0,-1.4 0.18,-2.34 0.39,-3.11 0.56,-1.73 1.01,-1.87 1.56,-1.87 0.81,0 \
1.64,0.73 1.64,1.56 0,0.28 -0.06,0.42 -0.28,0.77 -0.66,1.29 -1.28,3.28 \
-1.28,6.14 0,0.65 0,2.04 0.48,4.53 h 4.36 c 0.63,0 0.91,0 1.28,0.26 0.49,0.36 \
0.6,0.91 0.6,1.08 0,1.02 -0.91,1.02 -1.5,1.02 h -13.13 c -1.44,0 -2.4,-0.32 \
-3.98,-1.78 -0.91,-0.8 -2.27,-2.68 -2.27,-2.99 0,-0.42 0.46,-0.42 0.6,-0.42 \
0.39,0 0.42,0.06 0.62,0.37 1.78,2.46 3.94,2.46 4.7,2.46 h 2.13 c -1.08,-3.85 \
-2.95,-7.96 -4,-10.05 -0.2,-0.45 -0.56,-1.19 -0.66,-1.31 -0.04,-0.14 \
-0.11,-0.28 -0.11,-0.53 0,-0.57 0.43,-1.11 1.22,-1.11 1.39,0 1.78,1.56 \
2.61,4.7 z\"
             id=\"path3058-8\"
             style=\"fill:#000000;stroke-width:0\" /><polyline
             id=\"polyline3060-5\"
             points=\"462,418 486.6,418 486.6,420.04 462,420.04 \"
             style=\"fill:#000000;fill-rule:nonzero;stroke-width:0\" /><path
             d=\"m 481.52,395.38 h -1.19 c -0.1,-0.76 -0.45,-2.83 -0.91,-3.17 \
-0.26,-0.2 -2.95,-0.2 -3.44,-0.2 h -6.42 c 3.66,3.23 4.88,4.2 6.97,5.84 \
2.58,2.06 4.99,4.22 4.99,7.53 0,4.22 -3.69,6.8 -8.16,6.8 -4.31,0 -7.25,-3.03 \
-7.25,-6.23 0,-1.79 1.5,-1.96 1.86,-1.96 0.83,0 1.84,0.6 1.84,1.85 0,0.62 \
-0.25,1.84 -2.06,1.84 1.08,2.47 3.45,3.23 5.09,3.23 3.49,0 5.3,-2.7 5.3,-5.53 \
0,-3.03 -2.16,-5.43 -3.28,-6.68 l -8.39,-8.3 c -0.36,-0.31 -0.36,-0.39 \
-0.36,-1.36 h 14.36 z\"
             id=\"path3062-5\"
             style=\"fill:#000000;stroke-width:0\" /></g>      </g>
    </g>
    <g
       transform=\"translate(76.771593,-113.13709)\"
       id=\"g3081\">
      <rect
         width=\"50.507626\"
         height=\"50.507626\"
         x=\"224.25386\"
         y=\"345.2554\"
         id=\"rect2985-6\"
         style=\"fill:#ffffff;stroke:#000000;stroke-width:1;stroke-miterlimit:\
4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\" />
      <g
         transform=\"matrix(0.7295918,0,0,0.7295918,17.846028,117.76162)\"
         id=\"g3055\">
        <g
           transform=\"matrix(1.0629921,0,0,-1.0629921,-186.02362,789.27165)\"\

           id=\"content\"
           xml:space=\"preserve\"
           style=\"font-style:normal;font-variant:normal;font-weight:normal;\
font-stretch:normal;letter-spacing:normal;word-spacing:normal;text-anchor:\
start;fill:none;stroke:#000000;stroke-linecap:butt;stroke-linejoin:miter;\
stroke-miterlimit:10.43299961;stroke-opacity:1;stroke-dasharray:none;stroke-\
dashoffset:0\"><path
             d=\"m 472.36,438.42 h 4.14 c -0.53,-2.1 -1.29,-5.27 -1.29,-8.02 \
0,-1.4 0.18,-2.34 0.39,-3.11 0.56,-1.73 1.01,-1.87 1.56,-1.87 0.81,0 \
1.64,0.73 1.64,1.56 0,0.28 -0.06,0.42 -0.28,0.77 -0.66,1.29 -1.28,3.28 \
-1.28,6.14 0,0.65 0,2.04 0.48,4.53 h 4.36 c 0.63,0 0.91,0 1.28,0.26 0.49,0.36 \
0.6,0.91 0.6,1.08 0,1.02 -0.91,1.02 -1.5,1.02 h -13.13 c -1.44,0 -2.4,-0.32 \
-3.98,-1.78 -0.91,-0.8 -2.27,-2.68 -2.27,-2.99 0,-0.42 0.46,-0.42 0.6,-0.42 \
0.39,0 0.42,0.06 0.62,0.37 1.78,2.46 3.94,2.46 4.7,2.46 h 2.13 c -1.08,-3.85 \
-2.95,-7.96 -4,-10.05 -0.2,-0.45 -0.56,-1.19 -0.66,-1.31 -0.04,-0.14 \
-0.11,-0.28 -0.11,-0.53 0,-0.57 0.43,-1.11 1.22,-1.11 1.39,0 1.78,1.56 \
2.61,4.7 z\"
             id=\"path3058\"
             style=\"fill:#000000;stroke-width:0\" /><polyline
             id=\"polyline3060\"
             points=\"462,418 486.6,418 486.6,420.04 462,420.04 \"
             style=\"fill:#000000;fill-rule:nonzero;stroke-width:0\" /><path
             d=\"m 481.52,395.38 h -1.19 c -0.1,-0.76 -0.45,-2.83 -0.91,-3.17 \
-0.26,-0.2 -2.95,-0.2 -3.44,-0.2 h -6.42 c 3.66,3.23 4.88,4.2 6.97,5.84 \
2.58,2.06 4.99,4.22 4.99,7.53 0,4.22 -3.69,6.8 -8.16,6.8 -4.31,0 -7.25,-3.03 \
-7.25,-6.23 0,-1.79 1.5,-1.96 1.86,-1.96 0.83,0 1.84,0.6 1.84,1.85 0,0.62 \
-0.25,1.84 -2.06,1.84 1.08,2.47 3.45,3.23 5.09,3.23 3.49,0 5.3,-2.7 5.3,-5.53 \
0,-3.03 -2.16,-5.43 -3.28,-6.68 l -8.39,-8.3 c -0.36,-0.31 -0.36,-0.39 \
-0.36,-1.36 h 14.36 z\"
             id=\"path3062\"
             style=\"fill:#000000;stroke-width:0\" /></g>      </g>
    </g>
    <g
       transform=\"translate(133.34014,2.0203072)\"
       id=\"g3009-1\">
      <rect
         width=\"50.507626\"
         height=\"50.507626\"
         x=\"97.984795\"
         y=\"230.09801\"
         id=\"rect2985-3\"
         style=\"fill:#ffffff;stroke:#000000;stroke-width:1;stroke-miterlimit:\
4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\" />
      <text
         x=\"109.09647\"
         y=\"270.50409\"
         id=\"text3005-5\"
         xml:space=\"preserve\"
         style=\"font-size:40px;font-style:normal;font-weight:normal;line-\
height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;\
stroke:none;font-family:Sans\"><tspan
           x=\"109.09647\"
           y=\"270.50409\"
           id=\"tspan3007-3\">R</tspan></text>
    </g>
    <g
       transform=\"translate(-1.4285714,2.0203072)\"
       id=\"g3009\">
      <rect
         width=\"50.507626\"
         height=\"50.507626\"
         x=\"97.984795\"
         y=\"230.09801\"
         id=\"rect2985\"
         style=\"fill:#ffffff;stroke:#000000;stroke-width:1;stroke-miterlimit:\
4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\" />
      <text
         x=\"109.09647\"
         y=\"270.50409\"
         id=\"text3005\"
         xml:space=\"preserve\"
         style=\"font-size:40px;font-style:normal;font-weight:normal;line-\
height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;\
stroke:none;font-family:Sans\"><tspan
           x=\"109.09647\"
           y=\"270.50409\"
           id=\"tspan3007\">R</tspan></text>
    </g>
    <path
       d=\"m 61.619302,183.631 513.157498,0\"
       id=\"path3125-2\"
       style=\"fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;\
stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:\
none\" />
    <g
       transform=\"matrix(-1,0,0,-1,335.36026,439.49089)\"
       id=\"g3177-1\"
       style=\"stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none\">
      <path
         d=\"m 172.231,252.06883 a 5.3033009,5.3033009 0 1 1 -10.6066,0 \
5.3033009,5.3033009 0 1 1 10.6066,0 z\"
         transform=\"matrix(0.73890225,0,0,0.73890225,42.71742,69.329835)\"
         id=\"path3145-9\"
         style=\"fill:#000000;stroke:#000000;stroke-width:2.70671797;stroke-\
miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\" />
      <path
         d=\"m 166.06068,253.8366 0,-71.21576\"
         id=\"path3147-6\"
         style=\"fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;\
stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:\
none\" />
      <g
         transform=\"matrix(0.70710678,-0.70710678,0.70710678,0.70710678,-79.\
468605,194.81873)\"
         id=\"g3173-7\"
         style=\"stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none\">
        <path
           d=\"m 173.08113,165.32198 17.65547,0\"
           id=\"path3153-6\"
           style=\"fill:none;stroke:#000000;stroke-width:2;stroke-linecap:\
butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-\
dasharray:none\" />
        <path
           d=\"m 181.90886,174.14972 0,-17.65548\"
           id=\"path3153-3-2\"
           style=\"fill:none;stroke:#000000;stroke-width:2;stroke-linecap:\
butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-\
dasharray:none\" />
      </g>
    </g>
    <g
       transform=\"translate(34.082178,0.25832988)\"
       id=\"g3177-1-3\"
       style=\"stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none\">
      <path
         d=\"m 172.231,252.06883 a 5.3033009,5.3033009 0 1 1 -10.6066,0 \
5.3033009,5.3033009 0 1 1 10.6066,0 z\"
         transform=\"matrix(0.73890225,0,0,0.73890225,42.71742,69.329835)\"
         id=\"path3145-9-3\"
         style=\"fill:#000000;stroke:#000000;stroke-width:2.70671797;stroke-\
miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0\" />
      <path
         d=\"m 166.06068,253.8366 0,-71.21576\"
         id=\"path3147-6-7\"
         style=\"fill:none;stroke:#000000;stroke-width:2;stroke-linecap:butt;\
stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:\
none\" />
      <g
         transform=\"matrix(0.70710678,-0.70710678,0.70710678,0.70710678,-79.\
468605,194.81873)\"
         id=\"g3173-7-8\"
         style=\"stroke-width:2;stroke-miterlimit:4;stroke-dasharray:none\">
        <path
           d=\"m 173.08113,165.32198 17.65547,0\"
           id=\"path3153-6-2\"
           style=\"fill:none;stroke:#000000;stroke-width:2;stroke-linecap:\
butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-\
dasharray:none\" />
        <path
           d=\"m 181.90886,174.14972 0,-17.65548\"
           id=\"path3153-3-2-7\"
           style=\"fill:none;stroke:#000000;stroke-width:2;stroke-linecap:\
butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-\
dasharray:none\" />
      </g>
    </g>
    <g
       transform=\"translate(107.85714,-69.285714)\"
       id=\"g4059\">
      <g
         transform=\"matrix(1.0629921,0,0,-1.0629921,-186.02362,789.27165)\"
         id=\"g4061\"
         xml:space=\"preserve\"
         style=\"font-style:normal;font-variant:normal;font-weight:normal;\
font-stretch:normal;letter-spacing:normal;word-spacing:normal;text-anchor:\
start;fill:none;stroke:#000000;stroke-linecap:butt;stroke-linejoin:miter;\
stroke-miterlimit:10.43299961;stroke-opacity:1;stroke-dasharray:none;stroke-\
dashoffset:0\"><path
           d=\"m 470.16,424.78 h 8.38 c 0.65,0 2.43,0 2.43,1.7 0,1.19 \
-1.04,1.19 -1.98,1.19 h -13.95 c -1,0 -2.94,0 -5.13,-2.35 -1.66,-1.78 \
-3.05,-4.17 -3.05,-4.48 0,-0.05 0,-0.48 0.6,-0.48 0.4,0 0.5,0.18 0.79,0.59 \
2.46,3.83 5.29,3.83 6.33,3.83 h 4.14 l -4.89,-15.99 c -0.19,-0.59 -0.48,-1.64 \
-0.48,-1.84 0,-0.55 0.34,-1.34 1.44,-1.34 1.64,0 1.89,1.39 2.04,2.14 z\"
           id=\"path4063\"
           style=\"fill:#000000;stroke-width:0\" /></g>    </g>
  </g>
</svg>
\
\>", "Input"]
}, Closed]]
}, Closed]]
},
WindowSize->{1280, 1000},
WindowMargins->{{Automatic, -1280}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3568009098-7400086"->{
  Cell[5417, 129, 292, 5, 43, "Print",
   CellTags->"Info3568009098-7400086"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3568009098-7400086", 224993, 5472}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 137, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[719, 26, 96, 1, 45, "Subsection"],
Cell[818, 29, 519, 9, 51, "Text"],
Cell[1340, 40, 373, 6, 31, "Text"],
Cell[1716, 48, 1579, 21, 251, "Text"],
Cell[3298, 71, 288, 5, 51, "Text"],
Cell[3589, 78, 374, 10, 55, "Input"],
Cell[3966, 90, 398, 6, 51, "Text"],
Cell[CellGroupData[{
Cell[4389, 100, 142, 2, 32, "Input"],
Cell[4534, 104, 565, 11, 55, "Output"]
}, Open  ]],
Cell[5114, 118, 158, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[5297, 125, 117, 2, 32, "Input"],
Cell[5417, 129, 292, 5, 43, "Print",
 CellTags->"Info3568009098-7400086"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5758, 140, 153, 2, 45, "Subsection"],
Cell[5914, 144, 177, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[6116, 152, 351, 7, 32, "Input"],
Cell[6470, 161, 980, 29, 32, "Output"]
}, Open  ]],
Cell[7465, 193, 676, 16, 53, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[8178, 214, 281, 5, 37, "Subsection"],
Cell[CellGroupData[{
Cell[8484, 223, 105, 1, 35, "Subsubsection"],
Cell[8592, 226, 184, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[8801, 234, 552, 16, 55, "Input"],
Cell[9356, 252, 796, 25, 32, "Output"]
}, Open  ]],
Cell[10167, 280, 159, 3, 31, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[10363, 288, 106, 1, 29, "Subsubsection"],
Cell[10472, 291, 197, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[10694, 299, 521, 14, 55, "Input"],
Cell[11218, 315, 8572, 204, 239, "Output"]
}, Open  ]],
Cell[19805, 522, 339, 6, 51, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[20181, 533, 102, 1, 29, "Subsubsection"],
Cell[20286, 536, 195, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[20506, 544, 598, 16, 55, "Input"],
Cell[21107, 562, 1820, 49, 82, "Output"]
}, Open  ]],
Cell[22942, 614, 273, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[23240, 623, 634, 17, 55, "Input"],
Cell[23877, 642, 2842, 77, 129, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[26768, 725, 102, 1, 29, "Subsubsection"],
Cell[26873, 728, 374, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[27272, 739, 1568, 36, 77, "Input"],
Cell[28843, 777, 4716, 111, 144, "Output"]
}, Open  ]],
Cell[33574, 891, 387, 7, 31, "Text"],
Cell[CellGroupData[{
Cell[33986, 902, 1299, 34, 99, "Input"],
Cell[35288, 938, 6451, 156, 210, "Output"]
}, Open  ]],
Cell[41754, 1097, 206, 4, 31, "Text"],
Cell[41963, 1103, 301, 8, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[42301, 1116, 115, 1, 29, "Subsubsection"],
Cell[42419, 1119, 391, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[42835, 1130, 721, 19, 55, "Input"],
Cell[43559, 1151, 9475, 226, 283, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[53083, 1383, 159, 2, 29, "Subsubsection"],
Cell[53245, 1387, 364, 6, 31, "Text"],
Cell[CellGroupData[{
Cell[53634, 1397, 205, 5, 32, "Input"],
Cell[53842, 1404, 1230, 34, 46, "Output"]
}, Open  ]],
Cell[55087, 1441, 277, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[55389, 1450, 369, 8, 32, "Input"],
Cell[55761, 1460, 1161, 36, 55, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[56983, 1503, 214, 4, 37, "Subsection"],
Cell[57200, 1509, 271, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[57496, 1518, 101, 1, 35, "Subsubsection"],
Cell[57600, 1521, 132, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[57757, 1528, 532, 15, 77, "Input"],
Cell[58292, 1545, 1182, 33, 37, "Output"],
Cell[59477, 1580, 191, 4, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[59717, 1590, 100, 1, 29, "Subsubsection"],
Cell[59820, 1593, 179, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[60024, 1601, 372, 8, 55, "Input"],
Cell[60399, 1611, 1179, 33, 37, "Output"],
Cell[61581, 1646, 870, 25, 37, "Output"]
}, Open  ]],
Cell[62466, 1674, 190, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[62681, 1682, 516, 13, 77, "Input"],
Cell[63200, 1697, 1163, 33, 37, "Output"],
Cell[64366, 1732, 269, 8, 32, "Output"],
Cell[64638, 1742, 624, 16, 37, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[65311, 1764, 146, 2, 29, "Subsubsection"],
Cell[65460, 1768, 308, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[65793, 1777, 663, 18, 77, "Input"],
Cell[66459, 1797, 1288, 36, 37, "Output"],
Cell[67750, 1835, 963, 27, 37, "Output"]
}, Open  ]],
Cell[68728, 1865, 255, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[69008, 1874, 797, 23, 99, "Input"],
Cell[69808, 1899, 1272, 35, 37, "Output"],
Cell[71083, 1936, 317, 8, 32, "Output"],
Cell[71403, 1946, 716, 17, 37, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[72168, 1969, 104, 1, 29, "Subsubsection"],
Cell[72275, 1972, 265, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[72565, 1981, 1004, 26, 99, "Input"],
Cell[73572, 2009, 2914, 79, 129, "Output"],
Cell[76489, 2090, 1485, 34, 84, "Output"],
Cell[77977, 2126, 1517, 30, 230, "Output"]
}, Open  ]],
Cell[79509, 2159, 259, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[79793, 2168, 1214, 32, 99, "Input"],
Cell[81010, 2202, 5105, 161, 70, "Output"],
Cell[86118, 2365, 2113, 41, 70, "Output"]
}, Open  ]],
Cell[88246, 2409, 177, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[88448, 2417, 1127, 27, 77, "Input"],
Cell[89578, 2446, 1144, 25, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[90771, 2477, 102, 1, 29, "Subsubsection"],
Cell[90876, 2480, 242, 5, 31, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[91167, 2491, 103, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[91295, 2496, 106, 1, 35, "Subsubsection"],
Cell[91404, 2499, 536, 8, 51, "Text"],
Cell[CellGroupData[{
Cell[91965, 2511, 896, 23, 77, "Input"],
Cell[92864, 2536, 5055, 111, 232, "Output"],
Cell[97922, 2649, 1400, 28, 242, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[99371, 2683, 115, 1, 29, "Subsubsection"],
Cell[99489, 2686, 891, 17, 93, "Text"],
Cell[CellGroupData[{
Cell[100405, 2707, 1042, 25, 77, "Input"],
Cell[101450, 2734, 4439, 82, 187, "Output"],
Cell[105892, 2818, 1459, 30, 242, "Output"]
}, Open  ]],
Cell[107366, 2851, 168, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[107559, 2858, 285, 7, 55, "Input"],
Cell[107847, 2867, 115, 2, 49, "Output"]
}, Open  ]],
Cell[107977, 2872, 463, 6, 51, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[108489, 2884, 103, 1, 37, "Subsection"],
Cell[108595, 2887, 243, 6, 31, "Text"],
Cell[CellGroupData[{
Cell[108863, 2897, 110, 1, 35, "Subsubsection"],
Cell[108976, 2900, 398, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[109399, 2911, 3168, 72, 280, "Input"],
Cell[112570, 2985, 23958, 396, 224, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[136577, 3387, 108, 1, 29, "Subsubsection"],
Cell[136688, 3390, 614, 11, 51, "Text"],
Cell[CellGroupData[{
Cell[137327, 3405, 1566, 40, 253, "Input"],
Cell[138896, 3447, 12130, 207, 227, "Output"]
}, Open  ]],
Cell[151041, 3657, 195, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[151261, 3665, 283, 6, 55, "Input"],
Cell[151547, 3673, 1932, 50, 77, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[153540, 3730, 113, 1, 37, "Subsection"],
Cell[153656, 3733, 446, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[154127, 3744, 108, 1, 35, "Subsubsection"],
Cell[154238, 3747, 238, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[154501, 3756, 270, 8, 32, "Input"],
Cell[154774, 3766, 931, 32, 55, "Output"]
}, Open  ]],
Cell[155720, 3801, 112, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[155857, 3806, 414, 11, 32, "Input"],
Cell[156274, 3819, 810, 27, 49, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[157133, 3852, 106, 1, 29, "Subsubsection"],
Cell[157242, 3855, 166, 3, 31, "Text"],
Cell[157411, 3860, 481, 8, 51, "Text"],
Cell[CellGroupData[{
Cell[157917, 3872, 896, 25, 55, "Input"],
Cell[158816, 3899, 228, 3, 43, "Print"],
Cell[159047, 3904, 127, 2, 32, "Output"]
}, Open  ]],
Cell[159189, 3909, 140, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[159354, 3916, 915, 27, 55, "Input"],
Cell[160272, 3945, 1342, 40, 82, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[161675, 3992, 103, 1, 37, "Subsection"],
Cell[161781, 3995, 706, 11, 71, "Text"],
Cell[CellGroupData[{
Cell[162512, 4010, 98, 1, 35, "Subsubsection"],
Cell[162613, 4013, 161, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[162799, 4020, 2207, 66, 231, "Input"],
Cell[165009, 4088, 3246, 57, 230, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[168304, 4151, 107, 1, 29, "Subsubsection"],
Cell[168414, 4154, 132, 3, 31, "Text"],
Cell[168549, 4159, 7496, 127, 127, "Input"],
Cell[176048, 4288, 782, 18, 110, "Text"],
Cell[CellGroupData[{
Cell[176855, 4310, 2947, 77, 253, "Input"],
Cell[179805, 4389, 1274, 33, 49, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[181128, 4428, 168, 2, 35, "Subsubsection"],
Cell[181299, 4432, 143, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[181467, 4439, 1225, 38, 77, "Input"],
Cell[182695, 4479, 8976, 183, 107, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191732, 4669, 227, 5, 45, "Subsection"],
Cell[CellGroupData[{
Cell[191984, 4678, 181, 2, 35, "Subsubsection"],
Cell[192168, 4682, 151, 3, 31, "Text"],
Cell[CellGroupData[{
Cell[192344, 4689, 1739, 53, 209, "Input"],
Cell[194086, 4744, 3187, 104, 142, "Output"]
}, Open  ]],
Cell[197288, 4851, 203, 4, 31, "Text"],
Cell[CellGroupData[{
Cell[197516, 4859, 233, 6, 32, "Input"],
Cell[197752, 4867, 216, 5, 32, "Output"]
}, Open  ]],
Cell[197983, 4875, 208, 4, 31, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[198228, 4884, 126, 1, 29, "Subsubsection"],
Cell[198357, 4887, 308, 5, 51, "Text"],
Cell[198668, 4894, 2308, 64, 131, "Input"],
Cell[200979, 4960, 190, 2, 31, "Text"],
Cell[201172, 4964, 2011, 41, 310, "Input"],
Cell[CellGroupData[{
Cell[203208, 5009, 826, 18, 32, "Input"],
Cell[204037, 5029, 8486, 145, 456, "Output"]
}, Open  ]],
Cell[212538, 5177, 12101, 280, 70, "Input"]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
